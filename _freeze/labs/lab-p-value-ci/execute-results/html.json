{
  "hash": "4467132a4f405c8b450ea9a52620d300",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab: P-values and confidence intervals\"\nnumber-sections: true\nformat: live-html\nengine: knitr\nwebr:\n  packages:\n    - dplyr\n    - tableone\nresources:\n  - ../data/steps_clean.csv\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell setup='true' exercise='ex_1'}\n```{webr}\n#| setup: true\n#| exercise: ex_1\n# Load the CSV data\nlibrary(dplyr)\ndf_clean <- read.csv(\"data/steps_clean.csv\")\n```\n:::\n\n\n::::: panel-tabset\n## Exercise 1\n\nCalculate the two-sided p-value for the null hypothesis that the mean\nPHQ-9 value in the underlying population is 9, and describe in words\nwhat this number mean\n\n\n::: {.cell exercise='ex_1'}\n```{webr}\n#| exercise: ex_1\n\n```\n:::\n\n\n## Hints\n\n::: {.hint exercise=\"ex_1\"}\nYou can calculate it manually using the formula in the P-values and confidence intervals chapter or use the `t.test()` function\n``` r\nt.test(df_clean$phq9_screen,\n       mu=___,\n       alternative = \"____\") #<2>\n```\n:::\n\n## Solution\n\n::: {.solution exercise=\"ex_1\"}\nThe full solution is:\n\n``` r\n#calculate manually\nx_bar <- mean(df_clean$phq9_screen)\nse <- sd(df_clean$phq9_screen) / sqrt(nrow(df_clean))\nt_value <- (x_bar - 9) / se\n(1 - pt(t_value, df = 180))*2\n\n#or using the t.test function\n\nt.test(df_clean$phq9_screen,\n       mu=9,\n       alternative = \"two.sided\") #<1>\n```\n:::\n:::::\n\n\n::: {.cell setup='true' exercise='ex_2'}\n```{webr}\n#| setup: true\n#| exercise: ex_2\n# Load the CSV data\nlibrary(dplyr)\ndf_clean <- read.csv(\"data/steps_clean.csv\")\n```\n:::\n\n::::: panel-tabset\n## Exercise 2\n\nCalculate the 95% confidence interval for PHQ-9, and describe in words what the numbers mean.\n\n\n::: {.cell exercise='ex_2'}\n```{webr}\n#| exercise: ex_2\n\n```\n:::\n\n\n## Hints\n\n::: {.hint exercise=\"ex_2\"}\nYou can calculate it manually using the formula in the P-values and confidence intervals chapter or again use the `t.test()` function\n``` r\nt.test(df_clean$phq9_screen,\n       mu=___,\n       alternative = \"____\") #<2>\n```\n\n:::\n\n## Solution\n\n::: {.solution exercise=\"ex_2\"}\nThe full solution is:\n\n``` r\nx_bar <- mean(df_clean$phq9_screen)\nse <- sd(df_clean$phq9_screen) / sqrt(nrow(df_clean))\nz <- 1.96\n\n#upper confidence limit\nucl <- x_bar + z*se\n#lower confidence limit\nlcl <- x_bar - z*se\n\nprint(c(lcl, ucl))\n\n#or\nt.test(df_clean$phq9_screen,\n       mu=9,\n       alternative = \"two.sided\") #<2>\n```\n:::\n:::::\n\n\n\n\n::: {.cell setup='true' exercise='ex_3'}\n```{webr}\n#| setup: true\n#| exercise: ex_3\n# Load the CSV data\nlibrary(dplyr)\ndf_clean <- read.csv(\"data/steps_clean.csv\")\n```\n:::\n\n::::: panel-tabset\n## Exercise 3\n\nCalculate the p-value for getting our observed proportion of men, $\\hat{p}$, if the the true population proportion, $p$, is 40% or more the `prop.test()` function\n\n\n::: {.cell exercise='ex_3'}\n```{webr}\n#| exercise: ex_3\n# Simulating a gender variable\nn <- nrow(df_clean)\ndf_clean$gender <- rbinom(n, 1, 0.7)\ndf_clean$gender <- ifelse(df_clean$gender == 1, \"Woman\", \"Man\")\n\n```\n:::\n\n\n## Hints\n\n::: {.hint exercise=\"ex_3\"}\n\n``` r\nprop.test(x= sum(df_clean$gender==\"Man\"), \n          n= length(____), \n          p=___,\n          alternative=\"less\")\n\n```\n\n:::\n\n## Solution\n\n::: {.solution exercise=\"ex_3\"}\nThe full solution is:\n\n``` r\n# Simulating a gender variable\nn <- nrow(df_clean)\ndf_clean$gender <- rbinom(n, 1, 0.7)\ndf_clean$gender <- ifelse(df_clean$gender == 1, \"Woman\", \"Man\")\n\nprop.test(x= sum(df_clean$gender==\"Man\"), \n          n= length(df_clean$gender), \n          p=0.4,\n          alternative=\"less\")\n #<3>\n```\n:::\n:::::\n\n\n\n::: {.cell setup='true' exercise='ex_4'}\n```{webr}\n#| setup: true\n#| exercise: ex_4\n# Load the CSV data\nlibrary(dplyr)\ndf_clean <- read.csv(\"data/steps_clean.csv\")\n```\n:::\n\n::::: panel-tabset\n## Exercise 4\n\nCalculate the p-value for getting our observed proportion of men, $\\hat{p}$, if the the true population proportion, $p$, is 40% or more the `prop.test()` function\n\n\n::: {.cell exercise='ex_4'}\n```{webr}\n#| exercise: ex_4\n# Simulating a gender variable\nn <- nrow(df_clean)\ndf_clean$gender <- rbinom(n, 1, 0.7)\ndf_clean$gender <- ifelse(df_clean$gender == 1, \"Woman\", \"Man\")\n\n```\n:::\n\n\n## Hints\n\n::: {.hint exercise=\"ex_4\"}\nYou can combine the `prop.test()` function with the `table()` function for easier syntax\n\n``` r\nprop.test(table(____))\n\n```\n\n:::\n\n## Solution\n\n::: {.solution exercise=\"ex_4\"}\nThe full solution is:\n\n``` r\n# Simulating a gender variable\nn <- nrow(df_clean)\ndf_clean$gender <- rbinom(n, 1, 0.7)\ndf_clean$gender <- ifelse(df_clean$gender == 1, \"Woman\", \"Man\")\n\n#getting ci \nprop.test(table(df_clean$gender))\n #<4>\n```\n:::\n:::::\n\n\n::: panel-tabset\n## Exercise 5\n\nReason about the the meaning and interpretation of the confidence intervals you have calculated in the context of how the actual STePs study was performed. The study can be found at: https://www.nature.com/articles/s44184-024-00063-0\n\n## Hints\n\n-\n\n## Solution\n\n-\n:::\n\n\n\n::: {.cell setup='true' exercise='ex_6'}\n```{webr}\n#| setup: true\n#| exercise: ex_6\n# Load the CSV data\nlibrary(dplyr)\ndf_clean <- read.csv(\"data/steps_clean.csv\")\n# Simulating a gender variable\nn <- nrow(df_clean)\ndf_clean$gender <- rbinom(n, 1, 0.7)\ndf_clean$gender <- ifelse(df_clean$gender == 1, \"Woman\", \"Man\")\n```\n:::\n\n::::: panel-tabset\n## BONUS Exercise 6\n\nCalculate the 95% Wald confidence interval using the formula for the confidence interval and compare it to what you got using the `prop.test()` function\n\n\n::: {.cell exercise='ex_6'}\n```{webr}\n#| exercise: ex_6\n\n```\n:::\n\n\n## Hints\n\n::: {.hint exercise=\"ex_6\"}\nyou can use the formula for the standard error of the proportion: $$ \\mathrm{SE}(p) = \\sqrt{\\frac{p(1 - p)}{n}} $$\n\nand combine with the formula for the z-scores\n\n$$ z= \\frac{p - \\hat{p}}{SE} $$\n\n``` r\np_hat <- mean(df_clean$gender==\"___\")\nn = nrow(____)\nse <- sqrt(p_hat*(1-p_hat)/n)\nz= 1.96\n\n#upper confidence limit\nucl <- p_hat + __*__\n\n#lower confidence limit\nlcl <- p_hat - __*s__\n\nprint(c(lcl,ucl))\n\n```\n:::\n\n\n## Solution\n\n::: {.solution exercise=\"ex_6\"}\nThe full solution is:\n\n``` r\n# manual Wald CI\np_hat <- mean(df_clean$gender==\"Man\")\nn = nrow(df_clean)\nse <- sqrt(p_hat*(1-p_hat)/n)\nz= 1.96\n#upper coinfidence limit\nucl <- p_hat + z*se\n#lower confidence limit\nlcl <- p_hat - z*se\n\nprint(c(lcl,ucl))\n\n# and from prop.test\nprop.test(table(df_clean$gender))\n #<6>\n```\n:::\n:::::\n\n\n\n::: {.cell setup='true' exercise='ex_7'}\n```{webr}\n#| setup: true\n#| exercise: ex_7\n# Load the CSV data\nlibrary(dplyr)\ndf_clean <- read.csv(\"data/steps_clean.csv\")\n```\n:::\n\n::::: panel-tabset\n## BONUS Exercise 7\n\nModify the simulation code for the sampling distribution  to determine what would happen to the p-value if the sample size was 10, 100 or 1000\n\n\n::: {.cell exercise='ex_7'}\n```{webr}\n#| exercise: ex_7\nn_samples <- 1e4 # the number of samples\nsmp_size <- 10 # the size of our samples\nmeans <- rep(NA, n_samples) # an empty vector to contain our mean values\n\nfor (i in 1:n_samples) {\n  x <- rnorm(smp_size, mean = 82, sd = sd(df_clean$lsas_screen))\n  means[i] <- mean(x)\n}\n\nmean(means >= mean(df_clean$lsas_screen)) # proportion of simulated means that are larger than our observed mean\n\n```\n:::\n\n\n## Hints\n\n::: {.hint exercise=\"ex_7\"}\n\n``` r\nn_samples <- 1e4 # the number of samples\nsmp_size <- ____ # the size of our samples\nmeans <- rep(NA, n_samples) # an empty vector to contain our mean values\n\nfor (i in 1:n_samples) {\n  x <- rnorm(smp_size, mean = 82, sd = sd(df_clean$lsas_screen))\n  means[i] <- mean(x)\n}\n\nmean(means >= mean(df_clean$lsas_screen)) # proportion of simulated means that are larger than our observed mean\n\n```\n:::\n\n\n## Solution\n\n::: {.solution exercise=\"ex_7\"}\nThe full solution is:\n\n``` r\n# for a sample size of 10\nn_samples <- 1e4 # the number of samples\nsmp_size <- 10 # the size of our samples\nmeans <- rep(NA, n_samples) # an empty vector to contain our mean values\n\nfor (i in 1:n_samples) {\n  x <- rnorm(smp_size, mean = 82, sd = sd(df_clean$lsas_screen))\n  means[i] <- mean(x)\n}\n\nmean(means >= mean(df_clean$lsas_screen)) # proportion of simulated means that are larger than our observed mean\n\n# for a sample size of 100\n\nn_samples <- 1e4 # the number of samples\nsmp_size <- 100 # the size of our samples\nmeans <- rep(NA, n_samples) # an empty vector to contain our mean values\n\nfor (i in 1:n_samples) {\n  x <- rnorm(smp_size, mean = 82, sd = sd(df_clean$lsas_screen))\n  means[i] <- mean(x)\n}\n\nmean(means >= mean(df_clean$lsas_screen)) # proportion of simulated means that are larger than our observed mean\n\n\n# for a sample size of 1000 \n\nn_samples <- 1e4 # the number of samples\nsmp_size <- 1000 # the size of our samples\nmeans <- rep(NA, n_samples) # an empty vector to contain our mean values\n\nfor (i in 1:n_samples) {\n  x <- rnorm(smp_size, mean = 82, sd = sd(df_clean$lsas_screen))\n  means[i] <- mean(x)\n}\n\nmean(means >= mean(df_clean$lsas_screen)) # proportion of simulated means that are larger than our observed mean\n #<7>\n```\n:::\n:::::",
    "supporting": [
      "lab-p-value-ci_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}