{
  "hash": "de4e0bf79e8d7f8f72cd1288c72e9190",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercise solutions\"\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(here)\n\nd_bl <- read_rds(here(\"data\", \"steps_baseline.rds\"))\ndf_data <- read_csv(here(\"data\", \"steps_clean.csv\"))\n```\n:::\n\n\n## Lab 1\n\n## Lab 2\n\n**2.1** Use the functions described in yesterdays lab to get a quick overview of the dataset and give a brief summary of it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(d_bl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 181\nColumns: 15\n$ id             <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ group          <dbl> 2, 1, 0, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 2, 1, 1, 2, 0, 1…\n$ lsas_screen    <dbl> 63, 71, 98, 63, 74, 81, 67, 76, 88, 73, 86, 78, 97, 72,…\n$ gad_screen     <dbl> 7, 17, 18, 8, 14, 11, 5, 8, 14, 5, 15, 16, 17, 13, 10, …\n$ phq9_screen    <dbl> 6, 13, 19, 4, 18, 8, 9, 8, 14, 3, 5, 11, 12, 18, 10, 4,…\n$ bbq_screen     <dbl> 60, 66, 4, 50, 22, 23, 47, 52, 31, 46, 67, 24, 57, 40, …\n$ scs_screen     <dbl> 25, 16, 22, 35, 29, 30, 20, 34, 21, 26, 35, 21, 32, 33,…\n$ dmrsodf_screen <dbl> 49178, 50727, 45074, 5381, 48444, 50899, 46923, 41428, …\n$ ders_screen    <dbl> 44, 73, 65, 45, 46, 49, 57, 38, 67, 45, 55, 56, 71, 36,…\n$ pid_5_screen   <dbl> 25, 20, 48, 17, 24, 20, 24, 26, 39, 23, 24, 26, 23, 15,…\n$ gender         <chr> \"Woman\", \"Man\", \"Man\", \"Woman\", \"Man\", \"Man\", \"Woman\", …\n$ education      <chr> \"Primary\", \"University\", \"Primary\", \"Primary\", \"Primary…\n$ income         <chr> \"Medium\", \"Medium\", \"High\", \"Medium\", \"Medium\", \"High\",…\n$ gad_cat        <chr> \"Low anxiety\", \"High anxiety\", \"High anxiety\", \"Low anx…\n$ phq_cat        <chr> \"Low depression\", \"High depression\", \"High depression\",…\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(d_bl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 15\n     id group lsas_screen gad_screen phq9_screen bbq_screen scs_screen\n  <dbl> <dbl>       <dbl>      <dbl>       <dbl>      <dbl>      <dbl>\n1     1     2          63          7           6         60         25\n2     2     1          71         17          13         66         16\n3     3     0          98         18          19          4         22\n4     4     2          63          8           4         50         35\n5     5     2          74         14          18         22         29\n6     6     2          81         11           8         23         30\n# ℹ 8 more variables: dmrsodf_screen <dbl>, ders_screen <dbl>,\n#   pid_5_screen <dbl>, gender <chr>, education <chr>, income <chr>,\n#   gad_cat <chr>, phq_cat <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\nncol(d_bl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(d_bl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 181\n```\n\n\n:::\n:::\n\n\n**2.5** Calculate spread measures for the LSAS-SR scale, what do they tell you and which ones do you think are most useful to describe the spread of the values. Motivate your answer briefly!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(d_bl$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16.46812\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(d_bl$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 271.199\n```\n\n\n:::\n\n```{.r .cell-code}\nrange(d_bl$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  60 134\n```\n\n\n:::\n\n```{.r .cell-code}\nIQR(d_bl$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 21\n```\n\n\n:::\n\n```{.r .cell-code}\nhist(d_bl$lsas_screen)\n```\n\n::: {.cell-output-display}\n![](solutions_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n**Overcourse:**\n\n**2.6** Calculate the *population variance and standard deviation*. How do these differ from the ones given by the functions `sd()` and `var()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# variance\nx_bar <- mean(d_bl$lsas_screen)\nn <- nrow(d_bl)\nresiduals <- d_bl$lsas_screen - x_bar\nsquared_residuals <- residuals^2\nsigma_squared_residuals <- sum(squared_residuals)\ns_2 <- sigma_squared_residuals / n\ns_2 # population variance\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 269.7006\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(d_bl$lsas_screen) # sample variance\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 271.199\n```\n\n\n:::\n\n```{.r .cell-code}\n# standard deviation\nsd <- sqrt(s_2)\nsd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16.42256\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(d_bl$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16.46812\n```\n\n\n:::\n:::\n\n\n**2.7** Use only the first ten participants and compare the population and the sample variance and standard deviation of LSAS-SR. What do you find, and how do the results compare to those from exercise 2.6.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_bl_10 <- d_bl[1:10, ]\n# variance\nx_bar <- mean(d_bl_10$lsas_screen)\nn <- nrow(d_bl_10)\nresiduals <- d_bl_10$lsas_screen - x_bar\nsquared_residuals <- residuals^2\nsigma_squared_residuals <- sum(squared_residuals)\ns_2 <- sigma_squared_residuals / n\ns_2 # population variance\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 110.64\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(d_bl_10$lsas_screen) # sample variance\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 122.9333\n```\n\n\n:::\n\n```{.r .cell-code}\n# standard deviation\nsd <- sqrt(s_2)\nsd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10.51856\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(d_bl_10$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 11.08753\n```\n\n\n:::\n:::\n\n\n**2.9** Visualize the joint distribution of GAD-7 and PHQ-9 as numeric variables and describe what you see\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(d_bl$gad_screen, d_bl$phq9_screen)\nabline(lm(d_bl$gad_screen ~ d_bl$phq9_screen))\n```\n\n::: {.cell-output-display}\n![](solutions_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**2.10** Visualize the distribution of of LSAS scores by income level and describe what you see\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(d_bl$lsas_screen ~ d_bl$income)\n```\n\n::: {.cell-output-display}\n![](solutions_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n**2.11** Create a variable for high vs. low DERS scores and investigate the joint distribution of this variable and phq_cat (that we created in an earlier example)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_bl$ders_screen_cat <- ifelse(d_bl$ders_screen > median(d_bl$ders_screen),\n  \"High DERS\",\n  \"Low DERS\"\n)\n\nplot(table(d_bl$ders_screen_cat, d_bl$phq_cat), main = \"Depression and Emotion regulation\")\n```\n\n::: {.cell-output-display}\n![](solutions_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n**2.12** Create a table using the tableone package to show descriptives statistics stratified by high vs low depression levels. Briefly interpret what you see.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tableone)\nvars <- c(\n  \"lsas_screen\",\n  \"gad_screen\",\n  \"phq9_screen\",\n  \"bbq_screen\",\n  \"scs_screen\",\n  \"dmrsodf_screen\",\n  \"ders_screen\",\n  \"pid_5_screen\",\n  \"gender\",\n  \"education\",\n  \"income\"\n)\n\nCreateContTable(vars = vars, data = d_bl, strata = \"phq_cat\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CreateContTable(vars = vars, data = d_bl, strata = \"phq_cat\"):\nNon-numeric variables dropped\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                            Stratified by phq_cat\n                             High depression                         \n  n                          82                                      \n  lsas_screen (mean (SD))                 88.71 (17.74)              \n  gad_screen (mean (SD))                  12.85 (4.25)               \n  phq9_screen (mean (SD))                 13.59 (2.82)               \n  bbq_screen (mean (SD))                  36.16 (16.89)              \n  scs_screen (mean (SD))                  25.91 (6.39)               \n  dmrsodf_screen (mean (SD)) 589841463458342.12 (5341241621657216.00)\n  ders_screen (mean (SD))                 53.40 (13.45)              \n  pid_5_screen (mean (SD))                26.96 (8.66)               \n                            Stratified by phq_cat\n                             Low depression      p      test\n  n                          99                             \n  lsas_screen (mean (SD))       81.47 (14.63)     0.003     \n  gad_screen (mean (SD))         9.20 (4.03)     <0.001     \n  phq9_screen (mean (SD))        6.32 (2.10)     <0.001     \n  bbq_screen (mean (SD))        42.52 (15.64)     0.009     \n  scs_screen (mean (SD))        29.11 (7.23)      0.002     \n  dmrsodf_screen (mean (SD)) 42288.83 (18185.78)  0.273     \n  ders_screen (mean (SD))       45.73 (12.45)    <0.001     \n  pid_5_screen (mean (SD))      21.41 (7.54)     <0.001     \n```\n\n\n:::\n:::\n\n\n## Lab 3\n\n**3.1** Estimate the standard error of LSAS_Screen in the STePS study using the formula above, and describe in words what the number means\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns_2 <- var(d_bl$lsas_screen)\nn <- nrow(d_bl)\nse <- sqrt(s_2 / n)\n\n# or using the standard deviation\n\nse <- sd(d_bl$lsas_screen) / sqrt(n)\n```\n:::\n\n\n**3.2** Calculate the standard error for the proportion of men in the STePS study, and describe the meaning of this number in words\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_hat <- mean(d_bl$gender == \"Man\")\nn <- nrow(d_bl)\nse <- sqrt(p_hat * (1 - p_hat) / n)\n```\n:::\n\n\n**3.3** Describe what would happen to these standard errors if the sample size had been 1000 participants and explain why?\n\n**3.4** Calculate the two-sided p-value for the null hypothesis that the mean PHQ-9 value in the underlying population is 9, and describe in words what this number mean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_bar <- mean(d_bl$phq9_screen)\nse <- sd(d_bl$phq9_screen) / sqrt(nrow(d_bl))\nt_value <- (x_bar - 9) / se\n(1 - pt(t_value, df = 180)) * 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.06076406\n```\n\n\n:::\n\n```{.r .cell-code}\n# or\n\nt.test(d_bl$phq9_screen,\n  mu = 9,\n  alternative = \"two.sided\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tOne Sample t-test\n\ndata:  d_bl$phq9_screen\nt = 1.887, df = 180, p-value = 0.06076\nalternative hypothesis: true mean is not equal to 9\n95 percent confidence interval:\n  8.971991 10.254529\nsample estimates:\nmean of x \n  9.61326 \n```\n\n\n:::\n:::\n\n\n**3.5** Calculate the p-value for getting our observed proportion of men, $\\hat{p}$, if the the true population proportion, $p$, is 40% or more using a z-test.\n\nHINT: use the standard error of the proportion: $$ \\mathrm{SE}(p) = \\sqrt{\\frac{p(1 - p)}{n}} $$\n\nand combine with the formula for the z-scores\n\n$$ z= \\frac{p - \\hat{p}}{SE} $$\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_hat <- mean(d_bl$gender == \"Man\")\np <- 0.4\nn <- nrow(d_bl)\nse <- sqrt(p * (1 - p) / n)\nz_value <- (p_hat - p) / se\n1 - pnorm(abs(z_value))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.815007e-05\n```\n\n\n:::\n\n```{.r .cell-code}\n# or\nprop.test(\n  x = sum(d_bl$gender == \"Man\"),\n  n = length(d_bl$gender),\n  p = 0.4,\n  alternative = \"less\",\n  correct = FALSE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\t1-sample proportions test without continuity correction\n\ndata:  sum(d_bl$gender == \"Man\") out of length(d_bl$gender), null probability 0.4\nX-squared = 14.852, df = 1, p-value = 5.815e-05\nalternative hypothesis: true p is less than 0.4\n95 percent confidence interval:\n 0.0000000 0.3165351\nsample estimates:\n        p \n0.2596685 \n```\n\n\n:::\n:::\n\n\n**3.6** Modify the simulation code for the sampling distribution above to determine what would happen to the p-value if the sample size was 10, 100 or 1000\n\nP-value with a sample size of 10\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 1e4 # the number of samples\nsmp_size <- 10 # the size of our samples\nmeans <- rep(NA, n_samples) # an empty vector to contain our mean values\n\nfor (i in 1:n_samples) {\n  x <- rnorm(smp_size, mean = 82, sd = sd(d_bl$lsas_screen))\n  means[i] <- mean(x)\n}\n\nmean(means >= mean(d_bl$lsas_screen)) # proportion of simulated means that are larger than our observed mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2978\n```\n\n\n:::\n:::\n\n\nP-value with a sample size of 100\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 1e4 # the number of samples\nsmp_size <- 100 # the size of our samples\nmeans <- rep(NA, n_samples) # an empty vector to contain our mean values\n\nfor (i in 1:n_samples) {\n  x <- rnorm(smp_size, mean = 82, sd = sd(d_bl$lsas_screen))\n  means[i] <- mean(x)\n}\n\nmean(means >= mean(d_bl$lsas_screen)) # proportion of simulated means that are larger than our observed mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0422\n```\n\n\n:::\n:::\n\n\nP-value with a sample size of 10000\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 1e4 # the number of samples\nsmp_size <- 1000 # the size of our samples\nmeans <- rep(NA, n_samples) # an empty vector to contain our mean values\n\nfor (i in 1:n_samples) {\n  x <- rnorm(smp_size, mean = 82, sd = sd(d_bl$lsas_screen))\n  means[i] <- mean(x)\n}\n\nmean(means >= mean(d_bl$lsas_screen)) # proportion of simulated means that are larger than our observed mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n**3.7.** Explain why the confidence intervals calculated using z-scores are narrower that the ones using t-scores.\n\n**3.8** Calculate the 95% confidence interval for PHQ-9, and describe in words what these numbers mean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_bar <- mean(d_bl$phq9_screen)\nse <- sd(d_bl$phq9_screen) / sqrt(nrow(d_bl))\nz <- 1.96\n\n# upper confidence limit\nucl <- x_bar + z * se\n# lower confidence limit\nlcl <- x_bar - z * se\n\nprint(c(lcl, ucl))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  8.976291 10.250229\n```\n\n\n:::\n\n```{.r .cell-code}\n# or\nt.test(d_bl$phq9_screen,\n  mu = 9,\n  alternative = \"two.sided\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tOne Sample t-test\n\ndata:  d_bl$phq9_screen\nt = 1.887, df = 180, p-value = 0.06076\nalternative hypothesis: true mean is not equal to 9\n95 percent confidence interval:\n  8.971991 10.254529\nsample estimates:\nmean of x \n  9.61326 \n```\n\n\n:::\n:::\n\n\n**3.9** Calculate the 95% Wald confidence interval for the proportion of men in the dataset using the formula above and interpret its meaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_hat <- mean(d_bl$gender == \"Man\")\nn <- nrow(d_bl)\nse <- sqrt(p_hat * (1 - p_hat) / n)\nz <- 1.96\n# upper coinfidence limit\np_hat + z * se\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3235448\n```\n\n\n:::\n\n```{.r .cell-code}\n# lower confidence limit\np_hat - z * se\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1957922\n```\n\n\n:::\n:::\n\n\n**3.10** Compare this to what you would obtain using the function `prop.test()` in R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.test(table(d_bl$gender))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\t1-sample proportions test with continuity correction\n\ndata:  table(d_bl$gender), null probability 0.5\nX-squared = 40.862, df = 1, p-value = 1.634e-10\nalternative hypothesis: true p is not equal to 0.5\n95 percent confidence interval:\n 0.1987679 0.3309846\nsample estimates:\n        p \n0.2596685 \n```\n\n\n:::\n:::\n\n\n**3.11** Reason about the the meaning and interpretation of the confidence intervals you have calculated in the context of how the actual STePs study was performed. The study can be found at: <https://www.nature.com/articles/s44184-024-00063-0>\n\n## testing two means and contingency tables\n\nCalculate the mean difference in post-treatment LSAS scores, and the associated two-sided p-value, between the therapist-guided and the wait list group\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_data %>%\n  filter(trt != \"self-guided\") %>%\n  t.test(lsas_post ~ trt, data = ., var.equal = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tTwo Sample t-test\n\ndata:  lsas_post by trt\nt = -4.5763, df = 110, p-value = 1.25e-05\nalternative hypothesis: true difference in means between group therapist-guided and group waitlist is not equal to 0\n95 percent confidence interval:\n -30.23220 -11.96065\nsample estimates:\nmean in group therapist-guided         mean in group waitlist \n                      57.35185                       78.44828 \n```\n\n\n:::\n\n```{.r .cell-code}\n# or manually\nx_bar_tg <- mean(df_data$lsas_post[df_data$trt == \"therapist-guided\"], na.rm = T)\nx_bar_wl <- mean(df_data$lsas_post[df_data$trt == \"waitlist\"], na.rm = T)\ns_2_tg <- var(df_data$lsas_post[df_data$trt == \"therapist-guided\"], na.rm = T)\ns_2_wl <- var(df_data$lsas_post[df_data$trt == \"waitlist\"], na.rm = T)\nn_tg <- sum(!is.na(df_data$lsas_post[df_data$trt == \"therapist-guided\"]))\nn_wl <- sum(!is.na(df_data$lsas_post[df_data$trt == \"waitlist\"]))\nsp2 <- ((n_tg - 1) * s_2_tg + (n_wl - 1) * s_2_wl) / (n_tg + n_wl - 2) # pooled variance\nSE_pooled <- sqrt(sp2 * (1 / n_tg + 1 / n_wl)) # pooled standard error\n\n# and put the together\nt_value <- (x_bar_wl - x_bar_tg) / SE_pooled\n\n# find the p-value\ndf <- n_tg + n_wl - 2\np_value <- 2 * (1 - pt(abs(t_value), df)) # multiplied by two to get the two-tailed p-value\np_value\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.250232e-05\n```\n\n\n:::\n:::\n\n\nComplement this with a 95% confidence interval\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# z-value 95% CI\nse_z <- sqrt((s_2_wl / n_wl) + (s_2_tg / n_tg))\nlcl <- (x_bar_wl - x_bar_tg) - 1.96 * se_z\nucl <- (x_bar_wl - x_bar_tg) + 1.96 * se_z\nprint(c(lcl, ucl))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 12.09103 30.10182\n```\n\n\n:::\n\n```{.r .cell-code}\n# t-value 95% CI\ndf <- n_wl + n_tg - 2\nalpha <- 0.05\nt_crit <- qt(1 - alpha / 2, df)\nlcl <- (x_bar_wl - x_bar_tg) - t_crit * SE_pooled\nucl <- (x_bar_wl - x_bar_tg) + t_crit * SE_pooled\nprint(c(lcl, ucl))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 11.96065 30.23220\n```\n\n\n:::\n:::\n\n\nDo you think the assumption of equal variance between the groups is justifies?\n\nDo you think the other assumptions of the t-test are fulfilled?\n\nHow do the results differ if you use the Welch t-test instead\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# students t-test\ndf_data %>%\n  filter(trt != \"waitlist\") %>%\n  t.test(lsas_post ~ trt, data = ., var.equal = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tTwo Sample t-test\n\ndata:  lsas_post by trt\nt = 1.7993, df = 109, p-value = 0.07474\nalternative hypothesis: true difference in means between group self-guided and group therapist-guided is not equal to 0\n95 percent confidence interval:\n -0.7676792 15.8885369\nsample estimates:\n     mean in group self-guided mean in group therapist-guided \n                      64.91228                       57.35185 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Welch t-test\ndf_data %>%\n  filter(trt != \"waitlist\") %>%\n  t.test(lsas_post ~ trt, data = ., var.equal = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  lsas_post by trt\nt = 1.7946, df = 106.62, p-value = 0.07555\nalternative hypothesis: true difference in means between group self-guided and group therapist-guided is not equal to 0\n95 percent confidence interval:\n -0.7913918 15.9122495\nsample estimates:\n     mean in group self-guided mean in group therapist-guided \n                      64.91228                       57.35185 \n```\n\n\n:::\n\n```{.r .cell-code}\n# very similar resluts\n```\n:::\n\n\n**BONUS:** If you feel up to it, try to also calculate a z-test for the mean difference in post-treatment LSAS-scores using the formulas above\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# z-test of the differences\nz_value <- (x_bar_wl - x_bar_tg) / se_z\np_value <- 2 * (1 - pnorm(abs(z_value)))\np_value\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.399067e-06\n```\n\n\n:::\n:::\n\n\n**BONUS:** Modify the code above to calculate the 99% confidence interval of the mean difference in LSAS-scores at post-treatment between the self-guided and the therapist-guided groups.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz_crit <- qnorm(1 - 0.01 / 2) # finding the z-value for a 99% CI\n\n# define the components of the formula\nx_bar_tg <- mean(df_data$lsas_post[df_data$trt == \"therapist-guided\"], na.rm = T)\nx_bar_sg <- mean(df_data$lsas_post[df_data$trt == \"self-guided\"], na.rm = T)\ns_2_tg <- var(df_data$lsas_post[df_data$trt == \"therapist-guided\"], na.rm = T)\ns_2_sg <- var(df_data$lsas_post[df_data$trt == \"self-guided\"], na.rm = T)\nn_tg <- sum(!is.na(df_data$lsas_post[df_data$trt == \"therapist-guided\"]))\nn_sg <- sum(!is.na(df_data$lsas_post[df_data$trt == \"self-guided\"]))\nse_z <- sqrt((s_2_tg / n_tg) + (s_2_sg / n_sg))\n\n# and put it together with the z-value formula\n\nucl <- (x_bar_sg - x_bar_tg) + z_crit * se_z\nlcl <- (x_bar_sg - x_bar_tg) - z_crit * se_z\nprint(c(lcl, ucl))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -3.291151 18.412009\n```\n\n\n:::\n\n```{.r .cell-code}\n# or\ndf_data %>%\n  filter(trt != \"waitlist\") %>%\n  t.test(lsas_post ~ trt, data = ., var.equal = TRUE, conf.level = 0.99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tTwo Sample t-test\n\ndata:  lsas_post by trt\nt = 1.7993, df = 109, p-value = 0.07474\nalternative hypothesis: true difference in means between group self-guided and group therapist-guided is not equal to 0\n99 percent confidence interval:\n -3.455748 18.576605\nsample estimates:\n     mean in group self-guided mean in group therapist-guided \n                      64.91228                       57.35185 \n```\n\n\n:::\n:::\n\n\nCompute a t-test for the difference in LSAS-scores between post-treatment and 12-month follow-up and provide an interpretation of its meaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# using the t-test function\nt.test(df_data$lsas_fu12, df_data$lsas_post, paired = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPaired t-test\n\ndata:  df_data$lsas_fu12 and df_data$lsas_post\nt = -2.512, df = 97, p-value = 0.01366\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -8.3112199 -0.9744944\nsample estimates:\nmean difference \n      -4.642857 \n```\n\n\n:::\n\n```{.r .cell-code}\n# or manually\ndiff_post_12FU <- df_data$lsas_fu12 - df_data$lsas_post\nmean_diff <- mean(diff_post_12FU, na.rm = TRUE)\nsd_diff <- sd(diff_post_12FU, na.rm = TRUE)\nn <- sum(!is.na(diff_post_12FU))\nse_diff <- sd_diff / sqrt(n)\nt_value <- mean_diff / se_diff\ndf <- n - 1\np_value <- 2 * (1 - pt(abs(t_value), df))\np_value\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01365707\n```\n\n\n:::\n:::\n\n\nAlso calculate the 95% confidence interval for this difference, using the z-value formula and provide an interpretation of its meaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiff_post_12FU <- df_data$lsas_fu12 - df_data$lsas_post\nmean_diff <- mean(diff_post_12FU, na.rm = TRUE)\nsd_diff <- sd(diff_post_12FU, na.rm = TRUE)\nn <- sum(!is.na(diff_post_12FU))\nse_diff <- sd_diff / sqrt(n)\n\n# and putting it together\nlcl <- mean_diff - 1.96 * se_diff\nucl <- mean_diff + 1.96 * se_diff\nprint(c(lcl, ucl))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -8.265524 -1.020190\n```\n\n\n:::\n:::\n\n\nCompare the means of GAD-7 from pre- to post-treatment and interpret the results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(df_data$gad_post, df_data$gad_screen, paired = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPaired t-test\n\ndata:  df_data$gad_post and df_data$gad_screen\nt = -6.052, df = 167, p-value = 9.133e-09\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -3.141877 -1.596218\nsample estimates:\nmean difference \n      -2.369048 \n```\n\n\n:::\n:::\n\n\nChi-squared tests, and other tests of significance, are sometimes used to check that important pre-treatment characteristics, such as gender or symptom level, are balanced between the treatment groups. Non-sinificant p-values are then taken as an argument that the groups are balanced. Reason about why this is a problematic approach.\n\n**Answer:** *Because a non-significant result **is not evidence of no difference.** With small samples, even large differences may be non-significant. Conversely, in large samples even the smallest difference may be statistically significant.*\n\nCreate a categorical for high or low generalized anxiety and one for high and low social anxiety, and use the Chi squared test to test the null hypothesis of no association between the variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_data <- df_data %>%\n  mutate(\n    gad_cat_screen = if_else(\n      gad_screen > median(gad_screen),\n      \"High GAD\", \"Low GAD\"\n    ),\n    sad_cat_screen = if_else(\n      lsas_screen > median(lsas_screen),\n      \"High SAD\", \"Low SAD\"\n    )\n  )\n\nchisq.test(df_data$gad_cat_screen, df_data$sad_cat_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's Chi-squared test with Yates' continuity correction\n\ndata:  df_data$gad_cat_screen and df_data$sad_cat_screen\nX-squared = 2.4198, df = 1, p-value = 0.1198\n```\n\n\n:::\n\n```{.r .cell-code}\nchisq.test(df_data$gad_cat_screen, df_data$sad_cat_screen)$observed\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                      df_data$sad_cat_screen\ndf_data$gad_cat_screen High SAD Low SAD\n              High GAD       49      39\n              Low GAD        40      53\n```\n\n\n:::\n\n```{.r .cell-code}\nchisq.test(df_data$gad_cat_screen, df_data$sad_cat_screen)$expected\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                      df_data$sad_cat_screen\ndf_data$gad_cat_screen High SAD  Low SAD\n              High GAD 43.27072 44.72928\n              Low GAD  45.72928 47.27072\n```\n\n\n:::\n:::\n\n",
    "supporting": [
      "solutions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}