{
  "hash": "95888be40015855a39bfde52d51ddced",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab: Probability rules\"\nnumber-sections: true\nformat: live-html\nengine: knitr\nwebr:\n  packages:\n    - dplyr\n    - readr\n    - here\n    - knitr\nresources:\n  - ../data/steps_baseline.rds\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| output: false\nwebr::install(\"gradethis\", quiet = TRUE)\nlibrary(gradethis)\noptions(webr.exercise.checker = function(\n  label, user_code, solution_code, check_code, envir_result, evaluate_result,\n  envir_prep, last_value, engine, stage, ...\n) {\n  if (is.null(check_code)) {\n    # No grading code, so just skip grading\n    invisible(NULL)\n  } else if (is.null(label)) {\n    list(\n      correct = FALSE,\n      type = \"warning\",\n      message = \"All exercises must have a label.\"\n    )\n  } else if (is.null(solution_code)) {\n    list(\n      correct = FALSE,\n      type = \"warning\",\n      message = htmltools::tags$div(\n        htmltools::tags$p(\"A problem occurred grading this exercise.\"),\n        htmltools::tags$p(\n          \"No solution code was found. Note that grading exercises using the \",\n          htmltools::tags$code(\"gradethis\"),\n          \"package requires a model solution to be included in the document.\"\n        )\n      )\n    )\n  } else {\n    gradethis::gradethis_exercise_checker(\n      label = label, solution_code = solution_code, user_code = user_code,\n      check_code = check_code, envir_result = envir_result,\n      evaluate_result = evaluate_result, envir_prep = envir_prep,\n      last_value = last_value, stage = stage, engine = engine)\n  }\n})\n```\n:::\n\n\n\n\n\nIn this lab, we'll practice evaluating probability rules using R. This is based on the [Probability rules](../labs/probability-rules.qmd) chapter.\n\n::: {.callout-tip}\nWhile you can complete all the exercises in your browser, we recommend also practicing in RStudio. Using an editor like RStudio will help you build real-world skills for writing, running, and saving your R code.\n:::\n\n# Load packages and data {.unnumbered}\n\nFirst, let's load the necessary packages and data. We also create summaries of the *education* and *income* variables to be used in the exercises. Note that these do not represent real data, so the results are a bit random.\n\n\n\n\n::: {.cell setup='true' exercise='[\"ex_1\",\"ex_2\",\"ex_3\",\"ex_4\"]'}\n```{webr}\n#| label: setup\n#| setup: true\n#| exercise:\n#|  - ex_1\n#|  - ex_2\n#|  - ex_3\n#|  - ex_4\n\nlibrary(dplyr)\nlibrary(readr)\nlibrary(here)\nlibrary(knitr)\n\n# Load the baseline data\nd_bl <- read_rds(here(\"data\", \"steps_baseline.rds\"))\n\n# Create summaries for education and income\nedu_summary <- d_bl |>\n  group_by(education) |>\n  summarise(\n    n = n(),\n    proportion = n / nrow(d_bl),\n    percent = round(proportion * 100, 1),\n    .groups = \"drop\"\n  )\n\nincome_summary <- d_bl |>\n  group_by(income) |>\n  summarise(\n    n = n(),\n    proportion = n / nrow(d_bl),\n    percent = round(proportion * 100, 1),\n    .groups = \"drop\"\n  )\n\nkable(income_summary)\n```\n:::\n\n::: {.cell}\n```{webr}\n#| label: setup-session\n\nlibrary(dplyr)\nlibrary(readr)\nlibrary(here)\nlibrary(knitr)\n\n# Load the baseline data\nd_bl <- read_rds(here(\"data\", \"steps_baseline.rds\"))\n\n# Create summaries for education and income\nedu_summary <- d_bl |>\n  group_by(education) |>\n  summarise(\n    n = n(),\n    proportion = n / nrow(d_bl),\n    percent = round(proportion * 100, 1),\n    .groups = \"drop\"\n  )\n\nincome_summary <- d_bl |>\n  group_by(income) |>\n  summarise(\n    n = n(),\n    proportion = n / nrow(d_bl),\n    percent = round(proportion * 100, 1),\n    .groups = \"drop\"\n  )\n\nkable(income_summary)\n```\n:::\n\n\n\n\n# Check that the sum of all probabilities is 1\n\n:::: {.panel-tabset}\n\n## Problem\n\nDo the numbers in our *income* variable add up to 1? You can use the `income_summary` object we created above.\n\n\n\n\n::: {.cell exercise='ex_1'}\n```{webr}\n#| label: ex-1\n#| exercise: ex_1\n\n# Calculate the sum of proportions for income\nsum_income_proportions <- sum(______)\n\n# Check if it equals 1\nsum_equals_one <- sum_income_proportions == ______\n\n# Display the result\ncat(\"Sum of income proportions:\", sum_income_proportions, \"\\n\")\ncat(\"Does it equal 1?\", sum_equals_one, \"\\n\")\n```\n:::\n\n\n\n\n## Hints\n\n::: {.hint exercise=\"ex_1\"}\n\nThe `income_summary` data frame has a column called `proportion` that contains the probability for each income level.\n\nTo calculate the sum, use `sum()` on the `proportion` column.\n\nTo check if it equals 1, compare the sum to 1 using `==`.\n\n:::\n\n## Solution\n\n::: {.solution exercise=\"ex_1\"}\n\n\n\n\n::: {.cell exercise='ex_1' solution='true'}\n```{webr}\n#| exercise: ex_1\n#| label: ex-1-solution\n#| solution: true\n\n# Calculate the sum of proportions for income\nsum_income_proportions <- sum(income_summary$proportion)  #<1>\n\n# Check if it equals 1\nsum_equals_one <- sum_income_proportions == 1  #<2>\n\n# Display the result\ncat(\"Sum of income proportions:\", sum_income_proportions, \"\\n\")\ncat(\"Does it equal 1?\", sum_equals_one, \"\\n\")\n```\n:::\n\n\n\n\n1. Sum all proportions in the `income_summary` data frame\n2. Check if the sum equals exactly 1\n\nThe sum should equal 1, confirming that all probabilities add up correctly!\n\n:::\n\n\n\n\n::: {.cell exercise='ex_1' check='true'}\n```{webr}\n#| exercise: ex_1\n#| label: ex-1-gradethis\n#| check: true\ngradethis::grade_this_code()\n```\n:::\n\n\n\n\n::::\n\n# Complement rule\n\nThe probability of an event not occurring is 1 minus the probability that it will occur.\n\nLet's check this for the \"Medium\" income level.\n\n$$\nP(\\text{not Medium}) = 1 - P(\\text{Medium})\n$$\n\n:::: {.panel-tabset}\n\n## Problem\n\nCalculate the complement rule for *Medium* income.\n\n\n\n\n::: {.cell exercise='ex_2'}\n```{webr}\n#| label: ex-2\n#| exercise: ex_2\n\n# Get the probability of Medium income\np_medium <- income_summary |>\n  filter(income == \"Medium\") |>\n  pull(proportion)\n\n# Calculate the complement (probability of NOT Medium income)\np_not_medium <- 1 - ______\n\n# Display the results\ncat(\"P(Medium income) =\", round(p_medium, 4), \"\\n\")\ncat(\"P(not Medium income) =\", round(p_not_medium, 4), \"\\n\")\ncat(\"Check complement rule, sum =\", round(p_medium + p_not_medium, 4), \"\\n\")\n```\n:::\n\n\n\n\n## Hints\n\n::: {.hint exercise=\"ex_2\"}\n\nYou already have `p_medium` calculated. To find the complement, subtract it from 1.\n\n:::\n\n## Solution\n\n::: {.solution exercise=\"ex_2\"}\n\n\n\n\n::: {.cell exercise='ex_2' solution='true'}\n```{webr}\n#| exercise: ex_2\n#| label: ex-2-solution\n#| solution: true\n\n# Get the probability of Medium income\np_medium <- income_summary |>\n  filter(income == \"Medium\") |>\n  pull(proportion)\n\n# Calculate the complement (probability of NOT Medium income)\np_not_medium <- 1 - p_medium  #<1>\n\n# Display the results\ncat(\"P(Medium income) =\", round(p_medium, 4), \"\\n\")\ncat(\"P(not Medium income) =\", round(p_not_medium, 4), \"\\n\")\ncat(\"Check complement rule, sum =\", round(p_medium + p_not_medium, 4), \"\\n\")\n```\n:::\n\n\n\n\n1. Apply the complement rule: P(not A) = 1 - P(A)\n\nThe sum of P(Medium) and P(not Medium) should equal 1, confirming the complement rule.\n\n:::\n\n\n\n\n::: {.cell exercise='ex_2' check='true'}\n```{webr}\n#| exercise: ex_2\n#| label: ex-2-gradethis\n#| check: true\ngradethis::grade_this_code()\n```\n:::\n\n\n\n\n::::\n\n# Addition rule\n\nThe probability that event A or event B occurs (or both).\n\n$$P(A \\cup B) = P(A) + P(B) - P(A \\cap B)$$\n\n:::: {.panel-tabset}\n\n## Problem\n\nCalculate the probability of having either \"University\" education OR being in the \"Medium\" income group.\n\n\n\n\n::: {.cell exercise='ex_3'}\n```{webr}\n#| label: ex-3\n#| exercise: ex_3\n\n# Get individual probabilities\np_university <- edu_summary |>\n  filter(education == \"University\") |>\n  pull(proportion)\n\np_medium_income <- income_summary |>\n  filter(income == \"Medium\") |>\n  pull(proportion)\n\n# Calculate probability of both University education AND Medium income\np_both <- d_bl |>\n  filter(education == \"University\" & income == \"Medium\") |>\n  nrow() / nrow(d_bl)\n\n# Apply addition rule\np_either <- p_university + p_medium_income - ______\n\n# Display results\ncat(\"P(University education) =\", round(p_university, 4), \"\\n\")\ncat(\"P(Medium income) =\", round(p_medium_income, 4), \"\\n\")\ncat(\"P(Both) =\", round(p_both, 4), \"\\n\")\ncat(\"P(Either) =\", round(p_either, 4), \"\\n\")\n```\n:::\n\n\n\n\n## Hints\n\n::: {.hint exercise=\"ex_3\"}\n\nYou have:\n\n- P(A) = `p_university`  \n- P(B) = `p_medium_income`  \n- P(A âˆ© B) = `p_both`  \n\nCombine them using the addition rule.\n\n:::\n\n## Solution\n\n::: {.solution exercise=\"ex_3\"}\n\n\n\n\n::: {.cell exercise='ex_3' solution='true'}\n```{webr}\n#| exercise: ex_3\n#| label: ex-3-solution\n#| solution: true\n\n# Get individual probabilities\np_university <- edu_summary |>\n  filter(education == \"University\") |>\n  pull(proportion)\n\np_medium_income <- income_summary |>\n  filter(income == \"Medium\") |>\n  pull(proportion)\n\n# Calculate probability of both University education AND Medium income\np_both <- d_bl |>\n  filter(education == \"University\" & income == \"Medium\") |>\n  nrow() / nrow(d_bl)\n\n# Apply addition rule\np_either <- p_university + p_medium_income - p_both  #<1>\n\n# Display results\ncat(\"P(University education) =\", round(p_university, 4), \"\\n\")\ncat(\"P(Medium income) =\", round(p_medium_income, 4), \"\\n\")\ncat(\"P(Both) =\", round(p_both, 4), \"\\n\")\ncat(\"P(Either) =\", round(p_either, 4), \"\\n\")\n```\n:::\n\n\n\n\n1. Apply the addition rule: P(A $\\cup$ B) = P(A) + P(B) - P(A $\\cap$ B)\n\nThe addition rule accounts for the overlap between the two events to avoid double-counting.\n\n:::\n\n\n\n\n::: {.cell exercise='ex_3' check='true'}\n```{webr}\n#| exercise: ex_3\n#| label: ex-3-gradethis\n#| check: true\ngradethis::grade_this_code()\n```\n:::\n\n\n\n\n::::\n\n# Conditional probability\n\nThe probability of event B occurring given that event A has occurred:\n\n$$P(B|A) = \\frac{P(A \\cap B)}{P(A)}$$\n\n:::: {.panel-tabset}\n\n## Problem\n\nCalculate the probability of having \"Medium\" income given that someone has \"University\" education.\n\n\n\n\n::: {.cell exercise='ex_4'}\n```{webr}\n#| label: ex-4\n#| exercise: ex_4\n\n# Get probability of University education\np_university <- edu_summary |>\n  filter(education == \"University\") |>\n  pull(proportion)\n\n# Calculate probability of both University education AND Medium income\np_both <- d_bl |>\n  filter(education == \"University\" & income == \"Medium\") |>\n  nrow() / nrow(d_bl)\n\n# Calculate conditional probability\np_medium_given_university <- ______ / ______\n\n# Display result\ncat(\"P(Medium income | University education) =\", round(p_medium_given_university, 4), \"\\n\")\n```\n:::\n\n\n\n\n## Hints\n\n::: {.hint exercise=\"ex_4\"}\n\nYou have:\n\n- P(A $\\cap$ B) = `p_both` (probability of both University AND Medium income)  \n- P(A) = `p_university` (probability of University education)  \n\nCombine them using the conditional probability formula.\n\n:::\n\n## Solution\n\n::: {.solution exercise=\"ex_4\"}\n\n\n\n\n::: {.cell exercise='ex_4' solution='true'}\n```{webr}\n#| exercise: ex_4\n#| label: ex-4-solution\n#| solution: true\n\n# Get probability of University education\np_university <- edu_summary |>\n  filter(education == \"University\") |>\n  pull(proportion)\n\n# Calculate probability of both University education AND Medium income\np_both <- d_bl |>\n  filter(education == \"University\" & income == \"Medium\") |>\n  nrow() / nrow(d_bl)\n\n# Calculate conditional probability\np_medium_given_university <- p_both / p_university  #<1>\n\n# Display result\ncat(\"P(Medium income | University education) =\", round(p_medium_given_university, 4), \"\\n\")\n```\n:::\n\n\n\n\n1. Apply the conditional probability formula: P(B|A) = P(A $\\cap$ B) / P(A)\n\nThis tells us the probability of having medium income among those with university education.\n\n:::\n\n\n\n\n::: {.cell exercise='ex_4' check='true'}\n```{webr}\n#| exercise: ex_4\n#| label: ex-4-gradethis\n#| check: true\ngradethis::grade_this_code()\n```\n:::\n\n\n\n\n::::\n\n# Summary\n\nIn this lab, you learned:\n\n1. **Probability basics**: How to verify that probabilities sum to 1\n2. **Complement rule**: P(not A) = 1 - P(A)\n3. **Addition rule**: P(A $\\cup$ B) = P(A) + P(B) - P(A $\\cap$ B)\n4. **Conditional probability**: P(B|A) = P(A $\\cap$ B) / P(A)\n",
    "supporting": [
      "lab-webr-probability-rules_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}