{
  "hash": "16fa335f0bb591df2ebd681783b724c1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Descriptive statistics\"\n---\n\n\n\n\nIn this chapter we show how to calculate and interpret descriptive statistics using the STePS dataset. We start by loading the cleaned data set saved in the [Import and clean data](import-clean.qmd) chapter.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(tidyverse)\n\ndf_data <- read_csv(here(\"data\", \"steps_clean.csv\"))\n```\n:::\n\n\n\n\nWe'll start of doing some basic descriptive statistics of the baseline variables. We start by checking the variable names to identify the baseline variables.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(df_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"id\"             \"group\"          \"lsas_screen\"    \"gad_screen\"    \n [5] \"phq9_screen\"    \"bbq_screen\"     \"scs_screen\"     \"dmrsodf_screen\"\n [9] \"ders_screen\"    \"pid_5_screen\"   \"lsas_v1\"        \"lsas_v2\"       \n[13] \"lsas_v3\"        \"lsas_v4\"        \"lsas_v5\"        \"lsas_v6\"       \n[17] \"lsas_v7\"        \"lsas_v8\"        \"lsas_post\"      \"gad_post\"      \n[21] \"phq9_post\"      \"bbq_post\"       \"scs_post\"       \"dmrsodf_post\"  \n[25] \"ders_post\"      \"lsas_fu6\"       \"gad_fu6\"        \"phq9_fu6\"      \n[29] \"bbq_fu6\"        \"scs_fu6\"        \"ders_fu6\"       \"lsas_fu12\"     \n[33] \"gad_fu12\"       \"phq9_fu12\"      \"bbq_fu12\"       \"scs_fu12\"      \n[37] \"ders_fu12\"      \"trt\"           \n```\n\n\n:::\n:::\n\n\n\n\nFor easy handling, we'll create a data frame containing only the baseline variables, ID, Group and all variables ending with the suffix \"\\_screen\".\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_bl <- df_data |>\n  select(\n    id,\n    group,\n    lsas_screen,\n    gad_screen,\n    phq9_screen,\n    bbq_screen,\n    scs_screen,\n    dmrsodf_screen,\n    ders_screen,\n    pid_5_screen\n  )\n```\n:::\n\n\n\n\nOr more efficiently (if variables are correctly named) we can use the `ends_with()` function from the *tidyselect* package:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_bl <- df_data |>\n  select(\n    id,\n    group,\n    ends_with(\"_screen\")\n  )\n```\n:::\n\n\n\n\n# Numeric data\n\nWe'll start exploring descriptive statistics by examining baseline levels of the LSAS-questionnaire, which measures symptoms of social anxiety and was used as the outcome variable in the study.\n\n## Visual presentations\n\nThe simplest, and often most informative way, to get an overview of a variable is to produce a visual representation of its distribution. For uni-variable numeric variables, two common visualizations are histograms `hist()` and boxplots `boxplot()`.\n\n### Histogram\n\nA **histogram** is a graphical representation used to visualize the **distribution of a numeric variable**. It shows how data are **spread across intervals (bins)** and helps identify patterns such as **central tendency, variability, skewness**, and **outliers**.\n\n| Feature            | What It Tells You                  |\n|--------------------|------------------------------------|\n| **Height of bars** | Number of observations in each bin |\n| **Width of bars**  | Range of values grouped together   |\n| **Shape**          | Symmetry, skewness, modality       |\n| **Outliers**       | Bars isolated from the main group  |\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(d_bl$lsas_screen)\n```\n\n::: {.cell-output-display}\n![](descriptive-statistics_files/figure-html/hist-lsas-screen-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Boxplot\n\nA **boxplot** (also called a **box-and-whisker plot**) is a compact, visual summary of the **distribution, central tendency, and variability** of a dataset.\n\n| Component             | Description                              |\n|-----------------------|------------------------------------------|\n| **Minimum**           | Smallest value (excluding outliers)      |\n| **Q1 (1st Quartile)** | 25th percentile (lower hinge of the box) |\n| **Median (Q2)**       | 50th percentile (line inside the box)    |\n| **Q3 (3rd Quartile)** | 75th percentile (upper hinge of the box) |\n| **Maximum**           | Largest value (excluding outliers)       |\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(d_bl$lsas_screen)\n```\n\n::: {.cell-output-display}\n![](descriptive-statistics_files/figure-html/boxplot-lsas-screen-1.png){width=672}\n:::\n:::\n\n\n\n\n## Centrality measures\n\nSometimes we need more comprehensive summaries of our data. For this purpose, it is common to use **centrality measures**. Centrality measures are statistical summaries that describe the **center or typical value** of a dataset. They help summarize where most values lie and include:\n\n-   **Mean**: The average of all values (sum of all values divided by the number of values).\n\n-   **Median**: The middle value when data is ordered (or the average of the two middle numbers if the length of the vector is an even number).\n\n-   **Mode**: The most frequently occurring value.\n\nThese measures provide insight into the **distribution’s central tendency**, helping you understand the \"typical\" case in your data.\n\n::: callout-note\n## Means, medians and outliers\n\nThe mean is sensitive to outliers, while the median is not. The values \\[1, 2, 3, 100\\] has a mean of 26.5. and a median of 2.5. None of them are \"wrong\", but the usefulness of each measure depends on what you want your centrality measures to tell. However, with highly skewed variables (e.g. income), the median is usually viewed as more informative.\n:::\n\nNow let's use R to calculate some centrality measures for LSAS at baseline.\n\n### Getting the mean using `mean()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(d_bl$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 84.75138\n```\n\n\n:::\n:::\n\n\n\n\n### Getting the median using `median()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(d_bl$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 82\n```\n\n\n:::\n:::\n\n\n\n\n### Getting the mode\n\nUnlike `mean()` and `median()`, base R does not include a built-in `mode()` function for computing the statistical mode (i.e. the most frequent value). However, you can create one.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_mode <- function(x) {\n  ux <- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\nget_mode(d_bl$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 74\n```\n\n\n:::\n:::\n\n\n\n\nMuch of this information could also be easily found using the `summary()` function.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(d_bl$lsas_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  60.00   72.00   82.00   84.75   93.00  134.00 \n```\n\n\n:::\n:::\n\n\n\n\n### Visualizing centrality measures\n\nYou could also plot the mean, median and mode over the histogram, to get a better sense of the data.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(d_bl$lsas_screen,\n  main = \"Histogram with Mean, Median, and Mode\",\n  xlab = \"Values\", probability = TRUE\n)\n\n# Add lines for mean, median, and mode\nabline(v = mean(d_bl$lsas_screen), col = \"blue\", lwd = 2, lty = 2) # Mean\nabline(v = median(d_bl$lsas_screen), col = \"red\", lwd = 2, lty = 2) # Median\nabline(v = get_mode(d_bl$lsas_screen), col = \"darkgreen\", lwd = 2, lty = 2) # Mode\n```\n\n::: {.cell-output-display}\n![](descriptive-statistics_files/figure-html/hist-lsas-annotated-1.png){width=672}\n:::\n:::\n\n\n\n\n## Spread measures\n\nCentrality measures give information on the most typical value in the distribution, but no info on the spread of values. For example, the two distributions below have the same mean value (0), but different spread (standard deviation 0.2 vs. 1).\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptive-statistics_files/figure-html/hist-lsas-spread-1.png){width=672}\n:::\n:::\n\n\n\n\nTo get a summary of the spread of the data, we use different **spread measures.** Spread measures describe how much the data **varies or is dispersed** around a central value like the mean or median. They help you understand whether the values are tightly clustered or widely scattered. Commonly used spread measures include:\n\n-   **Range** `range()`: The difference between the maximum and minimum values. Simple but sensitive to outliers.\n\n    $$\\text{Range} = \\max(X) - \\min(X)$$\n\n-   **Interquartile Range (IQR)** `IQR()`: The range of the middle 50% of data (Q3 − Q1). More robust against extreme values.\n\n    $$\\mathrm{IQR} = Q_3 - Q_1$$\n\n-   **Variance** `var()`: The average of the squared deviations from the mean. It gives more weight to larger deviations.\n\n    Population variance\n\n    $$\n    \\sigma^2 = \\frac{1}{n} \\sum_{i=1}^{n} (x_i - \\mu)^2\n    $$\n\n    Sample variance\n\n    $$\n    s^2 = \\frac{1}{n-1} \\sum_{i=1}^{n} (x_i - \\bar{x})^2\n    $$\n\n-   **Standard Deviation (SD)** `sd()`: The square root of variance. It measures average distance from the mean and is widely used in statistics.\n\n    Population SD\n\n    $$\n    \\sigma = \\sqrt{\\frac{1}{n} \\sum_{i=1}^{n} (x_i - \\mu)^2}\n    $$\n\n    Sample SD\n\n    $$ s = \\sqrt{\\frac{1}{n - 1} \\sum_{i=1}^{n} (x_i - \\bar{x})^2}$$\n\n    ::: callout-note\n    ## Population vs samples\n\n    The population variance ($\\sigma^2$) and standard deviation ($\\sigma$) are used when you have data for the **entire population** — that is, every single value of interest is included.\n\n    The sample variance ($s^2$) and standard deviation ($s$) are used when you're working with a **subset (sample)** of a larger population. It includes a correction (called **Bessel’s correction**) to account for the fact that samples tend to underestimate variability. The **sample SD** divides by $n -1$ to compensate for the fact that we use $\\bar{x}$, an estimate of the true population mean ($\\mu$). This correction makes the sample variance an **unbiased estimator** of the population variance.\n\n    The functions `sd`() and `var()` gives the sample standard deviation and variance.\n    :::\n\n# Categorical data\n\nNow we'll have a look at categorical data. First, we need to simulate some categorical data (since this is not included in the STePS dataset).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simulating a gender variable\nn <- nrow(d_bl)\nd_bl$gender <- rbinom(n, 1, 0.7)\nd_bl$gender <- ifelse(d_bl$gender == 1, \"Woman\", \"Man\")\n\n# Simulate an education variable\neducation_levels <- c(\"Primary\", \"Secondary\", \"University\")\neducation_probs <- c(0.4, 0.4, 0.2) # Adjust probabilities as needed\n\nd_bl$education <- sample(education_levels, size = n, replace = TRUE, prob = education_probs)\n\n# Simulate an income variable\nincome_levels <- c(\"Low\", \"Medium\", \"High\")\nincome_probs <- c(0.2, 0.6, 0.2) # Adjust probabilities as needed\n\nd_bl$income <- sample(income_levels, size = n, replace = TRUE, prob = income_probs)\n```\n:::\n\n\n\n\nThe `table()` function provides a quick overview of the number of values in each category.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(d_bl$gender)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  Man Woman \n   65   116 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(d_bl$education)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   Primary  Secondary University \n        70         78         33 \n```\n\n\n:::\n:::\n\n\n\n\nDived by the number of rows, it gives proportion in each category.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(d_bl$gender) / nrow(d_bl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     Man    Woman \n0.359116 0.640884 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(d_bl$education) / nrow(d_bl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   Primary  Secondary University \n 0.3867403  0.4309392  0.1823204 \n```\n\n\n:::\n:::\n\n\n\n\n::: callout-note\n## Spread of categorical data\n\nWe do not need spread measures for categorical data, as all information there is about the distribution in provided in the counts or proportions. We can however calculate the variance of a proportion\n:::\n\nSample variance of a proportion\n\n$$\n\\mathrm{Var}(\\hat{p}) = \\frac{\\hat{p}(1-\\hat{p}))}{n}\n$$\n\n## Visual presentations\n\nAs for numeric variables, visualizations can help get a better sense for the distribution of the data. Two common ways are **barcharts** and **piecharts**\n\n### Barcharts\n\nThe height of each bar gives the number of occurrences of each category. When you use the base function `plot()` on a factor level variable, it gives you a barchart.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(as.factor(d_bl$education))\n```\n\n::: {.cell-output-display}\n![](descriptive-statistics_files/figure-html/plot-education-1.png){width=672}\n:::\n:::\n\n\n\n\n### Piecharts\n\nA piechart shows the distribution of a categorical variable as a pie, with the size of each piece representing the proportion of each level of the categorical variable.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npie(table(d_bl$education))\n```\n\n::: {.cell-output-display}\n![](descriptive-statistics_files/figure-html/pie-education-1.png){width=672}\n:::\n:::\n\n\n\n\n# Bi-variable distributions\n\nIt can also be useful to investigate bi-variable distributions - i.e. the joint distribution of two variables - to get a sense of how variables in your data is related to each other.\n\n## Numeric by numeric distributions\n\nFor two numeric variables, the most common visualization is the **scatter plot.** It shows the distribution of each datapoint with one variable on the x-axis and the other on the y-axis. Using the `plot()` function with two numeric variables will give you a scatter plot.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(d_bl$lsas_screen, d_bl$gad_screen)\n```\n\n::: {.cell-output-display}\n![](descriptive-statistics_files/figure-html/scatter-plot-1.png){width=672}\n:::\n:::\n\n\n\n\n## Numeric by categorical distributions\n\nThe joint distribution of a numeric and a categorical variable can be visualized as a stratified boxplots. For this let's look at the distribution of LSAS scores for people with high generalized anxiety (GAD-7 ≥ 10 or more) vs low generalized anxiety (GAD-7 \\< 10).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a variable indicating if GAD-7 is 10 or more\nd_bl$gad_cat <- ifelse(d_bl$gad_screen >= 10, \"High anxiety\", \"Low anxiety\")\n\nboxplot(lsas_screen ~ gad_cat, data = d_bl)\n```\n\n::: {.cell-output-display}\n![](descriptive-statistics_files/figure-html/boxplot-lsas-gad-1.png){width=672}\n:::\n:::\n\n\n\n\n## Categorical by categorical distributions\n\nAll the information of the joint distribution of two categorical variables can be seen using a **cross-table**. For this let's look at the distribution of high vs low depression (PHQ-9 ≥ 10 vs PHQ-9 \\<10 or less) against high vs low generalized anxiety.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_bl$phq_cat <- ifelse(d_bl$phq9_screen >= 10, \"High depression\", \"Low depression\")\n\ntable(d_bl$gad_cat, d_bl$phq_cat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              \n               High depression Low depression\n  High anxiety              62             42\n  Low anxiety               20             57\n```\n\n\n:::\n:::\n\n\n\n\nAlthough all information about the distribution is available in the crosstable, you may still want to visualize this distribution. One way is to use a **mosaic plot**, which you can get by providing cross-table to the `plot()` function.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(table(d_bl$gad_cat, d_bl$phq_cat), main = \"Depression and anxiety\")\n```\n\n::: {.cell-output-display}\n![](descriptive-statistics_files/figure-html/mosaic-plot-1.png){width=672}\n:::\n:::\n\n\n\n\n## Descriptive statistics using the 'tableone' package\n\nA convenient way to get descriptive statistics for a range of variables is to use the *tableone* package and the `CreateTableOne()` function. First let get some descriptives for the overall sample\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"tableone\")\nlibrary(tableone)\n\n# define the variables you want\nvars <- c(\n  \"lsas_screen\",\n  \"gad_screen\",\n  \"phq9_screen\",\n  \"bbq_screen\",\n  \"scs_screen\",\n  \"dmrsodf_screen\",\n  \"ders_screen\",\n  \"pid_5_screen\",\n  \"gender\",\n  \"education\",\n  \"income\")\n\nCreateTableOne(vars = vars, data = d_bl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                            \n                             Overall                                 \n  n                                         181                      \n  lsas_screen (mean (SD))                 84.75 (16.47)              \n  gad_screen (mean (SD))                  10.86 (4.51)               \n  phq9_screen (mean (SD))                  9.61 (4.37)               \n  bbq_screen (mean (SD))                  39.64 (16.48)              \n  scs_screen (mean (SD))                  27.66 (7.03)               \n  dmrsodf_screen (mean (SD)) 267220994518069.59 (3595090797150460.50)\n  ders_screen (mean (SD))                 49.20 (13.43)              \n  pid_5_screen (mean (SD))                23.93 (8.51)               \n  gender = Woman (%)                        116 (64.1)               \n  education (%)                                                      \n     Primary                                 70 (38.7)               \n     Secondary                               78 (43.1)               \n     University                              33 (18.2)               \n  income (%)                                                         \n     High                                    34 (18.8)               \n     Low                                     41 (22.7)               \n     Medium                                 106 (58.6)               \n```\n\n\n:::\n:::\n\n\n\n\nWe can also do this stratified by a categorical variable using the strata argument. Let's have it by treatment group.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCreateTableOne(vars = vars, data = d_bl, strata = \"group\", test = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                            Stratified by group\n                             0                                       \n  n                                          60                      \n  lsas_screen (mean (SD))                 86.98 (18.99)              \n  gad_screen (mean (SD))                  11.18 (4.50)               \n  phq9_screen (mean (SD))                 10.35 (4.63)               \n  bbq_screen (mean (SD))                  37.38 (17.10)              \n  scs_screen (mean (SD))                  27.37 (7.04)               \n  dmrsodf_screen (mean (SD)) 806116666706155.25 (6244152850195288.00)\n  ders_screen (mean (SD))                 50.70 (13.72)              \n  pid_5_screen (mean (SD))                25.07 (9.46)               \n  gender = Woman (%)                         34 (56.7)               \n  education (%)                                                      \n     Primary                                 21 (35.0)               \n     Secondary                               28 (46.7)               \n     University                              11 (18.3)               \n  income (%)                                                         \n     High                                    14 (23.3)               \n     Low                                     12 (20.0)               \n     Medium                                  34 (56.7)               \n                            Stratified by group\n                             1                   2                  \n  n                                61                  60           \n  lsas_screen (mean (SD))       83.08 (12.97)       84.22 (16.95)   \n  gad_screen (mean (SD))        10.97 (4.44)        10.42 (4.63)    \n  phq9_screen (mean (SD))        9.15 (4.05)         9.35 (4.40)    \n  bbq_screen (mean (SD))        42.03 (17.09)       39.45 (15.10)   \n  scs_screen (mean (SD))        27.15 (7.31)        28.48 (6.76)    \n  dmrsodf_screen (mean (SD)) 44885.95 (16035.54) 44388.20 (14850.76)\n  ders_screen (mean (SD))       46.74 (13.60)       50.22 (12.83)   \n  pid_5_screen (mean (SD))      22.34 (7.80)        24.40 (8.08)    \n  gender = Woman (%)               44 (72.1)           38 (63.3)    \n  education (%)                                                     \n     Primary                       28 (45.9)           21 (35.0)    \n     Secondary                     22 (36.1)           28 (46.7)    \n     University                    11 (18.0)           11 (18.3)    \n  income (%)                                                        \n     High                           9 (14.8)           11 (18.3)    \n     Low                           15 (24.6)           14 (23.3)    \n     Medium                        37 (60.7)           35 (58.3)    \n```\n\n\n:::\n:::\n",
    "supporting": [
      "descriptive-statistics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}