{
  "hash": "5bff4430abc241b1a0a93f79b3d9b599",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidy Data Manipulation\"\n---\n\n\n\n\nIn this lab, we will learn how to manipulate and reshape data using the *tidyverse* suite of packages. Data manipulation is a crucial skill in biostatistics because raw data is rarely in the format we need for analysis or visualization.\n\nFor this lab, we will continue working with the STePS dataset that we cleaned in [Import and clean data](import-clean.qmd) and explored in [Descriptive statistics](descriptive-statistics.qmd). By the end of this lab, you will be able to:\n\n- Filter rows and select columns based on specific criteria\n- Create new variables using existing data\n- Group data and calculate summary statistics\n- Reshape data between wide and long formats\n- Understand when to use each data manipulation technique\n\n::: callout-note\n## Why data manipulation matters\n\nWe often need to:\n\n- Calculate change scores from baseline to follow-up\n- Create treatment group comparisons\n- Reshape data for different types of analyses\n- Combine data from multiple sources\n\nData wrangling can often be the most time-consuming part of a project, so it's important to be efficient and avoid errors.\n:::\n\n# Load packages and data\n\nWe'll use the same packages as before.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(here)\n```\n:::\n\n\n\n\nLet's load our cleaned data from the [Import and clean data](import-clean.qmd) lab:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_data <- read_csv(here(\"data\", \"steps_clean.csv\"))\n\n# Quick check of our data\nglimpse(df_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 181\nColumns: 38\n$ id             <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ group          <dbl> 2, 1, 0, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 2, 1, 1, 2, 0, 1…\n$ lsas_screen    <dbl> 63, 71, 98, 63, 74, 81, 67, 76, 88, 73, 86, 78, 97, 72,…\n$ gad_screen     <dbl> 7, 17, 18, 8, 14, 11, 5, 8, 14, 5, 15, 16, 17, 13, 10, …\n$ phq9_screen    <dbl> 6, 13, 19, 4, 18, 8, 9, 8, 14, 3, 5, 11, 12, 18, 10, 4,…\n$ bbq_screen     <dbl> 60, 66, 4, 50, 22, 23, 47, 52, 31, 46, 67, 24, 57, 40, …\n$ scs_screen     <dbl> 25, 16, 22, 35, 29, 30, 20, 34, 21, 26, 35, 21, 32, 33,…\n$ dmrsodf_screen <dbl> 49178, 50727, 45074, 5381, 48444, 50899, 46923, 41428, …\n$ ders_screen    <dbl> 44, 73, 65, 45, 46, 49, 57, 38, 67, 45, 55, 56, 71, 36,…\n$ pid_5_screen   <dbl> 25, 20, 48, 17, 24, 20, 24, 26, 39, 23, 24, 26, 23, 15,…\n$ lsas_v1        <dbl> 72, NA, 81, 44, 39, 65, 68, 69, NA, 70, 92, 83, 102, 50…\n$ lsas_v2        <dbl> 64, NA, 89, 33, 115, 64, NA, 70, 97, 83, 94, NA, 74, 62…\n$ lsas_v3        <dbl> 72, NA, 73, 36, NA, 63, NA, 71, 92, 62, 103, NA, 85, 54…\n$ lsas_v4        <dbl> 61, NA, 94, 44, NA, 60, NA, 51, 85, 61, 99, NA, 84, 52,…\n$ lsas_v5        <dbl> 61, NA, 93, 21, NA, 55, NA, 55, NA, 65, 82, NA, 79, 51,…\n$ lsas_v6        <dbl> 46, NA, 88, 20, NA, 46, NA, 56, 93, NA, 79, NA, 77, 44,…\n$ lsas_v7        <dbl> 55, NA, NA, 18, NA, 45, NA, 64, NA, 54, 101, NA, 89, 43…\n$ lsas_v8        <dbl> 49, NA, NA, 17, NA, 44, NA, 52, NA, 61, 84, NA, 89, NA,…\n$ lsas_post      <dbl> 50, NA, 77, 22, NA, 52, 75, 45, 79, 64, 80, 89, 83, 45,…\n$ gad_post       <dbl> 4, NA, 19, 6, NA, 9, 4, 3, 10, 7, 15, 7, 11, 11, 11, 1,…\n$ phq9_post      <dbl> 3, NA, 22, 4, NA, 6, 11, 2, 14, 4, 8, 7, 8, 8, 13, 4, 1…\n$ bbq_post       <dbl> 76, NA, 68, 57, NA, 14, 46, 70, 36, 40, 73, 31, 75, 41,…\n$ scs_post       <dbl> 34, NA, 34, 34, NA, 30, 19, 34, 23, 23, 31, 37, 34, 34,…\n$ dmrsodf_post   <dbl> 50776, NA, 42809, 52069, NA, 51758, 49, 50235, 47978, 4…\n$ ders_post      <dbl> 36, NA, 78, 38, NA, 54, 61, 26, 56, 51, 52, 25, 37, 33,…\n$ lsas_fu6       <dbl> 33, NA, NA, 14, 6, 60, 64, 49, NA, 45, 85, 74, NA, 58, …\n$ gad_fu6        <dbl> 0, NA, NA, 0, NA, 14, 6, 4, NA, 5, 16, NA, NA, 11, 8, 8…\n$ phq9_fu6       <dbl> 3, NA, NA, 2, NA, 6, 8, 3, NA, 6, 22, NA, NA, 6, 5, 12,…\n$ bbq_fu6        <dbl> 77, NA, NA, 68, NA, 9, 56, 64, NA, 48, 36, NA, NA, 39, …\n$ scs_fu6        <dbl> 28, NA, NA, 41, NA, 24, 29, 33, NA, 25, 30, NA, NA, 30,…\n$ ders_fu6       <dbl> 35, NA, NA, 36, NA, 72, 61, 26, NA, 37, 67, NA, NA, 36,…\n$ lsas_fu12      <dbl> 27, NA, NA, 16, 39, 75, 66, 43, NA, 51, 79, NA, NA, 55,…\n$ gad_fu12       <dbl> 5, NA, NA, 0, 11, 7, 6, 4, NA, 4, 14, NA, NA, 8, 19, 12…\n$ phq9_fu12      <dbl> 5, NA, NA, 2, 19, 9, 14, 3, NA, 5, 15, NA, NA, 8, 18, 3…\n$ bbq_fu12       <dbl> 76, NA, NA, 62, 12, 22, 52, 54, NA, 47, 25, NA, NA, 33,…\n$ scs_fu12       <dbl> 38, NA, NA, 40, 28, 33, 26, 34, NA, 21, 30, NA, NA, 32,…\n$ ders_fu12      <dbl> 35, NA, NA, 32, 46, 65, 42, 27, NA, 53, 52, NA, NA, 36,…\n$ trt            <chr> \"therapist-guided\", \"self-guided\", \"waitlist\", \"therapi…\n```\n\n\n:::\n:::\n\n\n\n\n# Basic data operations\n\nBefore we dive into complex data cleaning, let's start with the fundamental operations of data manipulation.\n\n## Selecting columns with `select()`\n\nThe `select()` function allows us to choose which columns (variables) we want to keep in our dataset. This is useful when working with large datasets where you only need a few variables.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select just ID, group, and baseline LSAS\ndf_basic <- df_data |>\n  select(id, group, lsas_screen)\n\nhead(df_basic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n     id group lsas_screen\n  <dbl> <dbl>       <dbl>\n1     1     2          63\n2     2     1          71\n3     3     0          98\n4     4     2          63\n5     5     2          74\n6     6     2          81\n```\n\n\n:::\n:::\n\n\n\n\nWe can also use helper functions to select multiple columns at once:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select all columns that start with \"lsas\"\ndf_lsas_all <- df_data |>\n  select(id, group, starts_with(\"lsas\"))\n\n# Check how many columns we have\nncol(df_lsas_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(df_lsas_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"id\"          \"group\"       \"lsas_screen\" \"lsas_v1\"     \"lsas_v2\"    \n [6] \"lsas_v3\"     \"lsas_v4\"     \"lsas_v5\"     \"lsas_v6\"     \"lsas_v7\"    \n[11] \"lsas_v8\"     \"lsas_post\"   \"lsas_fu6\"    \"lsas_fu12\"  \n```\n\n\n:::\n:::\n\n\n\n\n## Filtering rows with `filter()`\n\nThe `filter()` function allows us to select specific rows based on conditions. This is useful for creating subgroups or excluding certain participants.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Keep only participants in the guided treatment group (group == 2)\ndf_guided <- df_data |>\n  filter(group == 2)\n\nnrow(df_guided)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 60\n```\n\n\n:::\n:::\n\n\n\n\nWe can use multiple conditions:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Keep participants in guided treatment with baseline LSAS >= 60\ndf_guided_severe <- df_data |>\n  filter(group == 2, lsas_screen >= 60)\n\nnrow(df_guided_severe)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 60\n```\n\n\n:::\n:::\n\n\n\n\n::: callout-tip\n## Common filter conditions\n\n- `==` : equal to\n- `!=` : not equal to  \n- `>`, `>=` : greater than (or equal)\n- `<`, `<=` : less than (or equal)\n- `%in%` : is in a list of values\n- `is.na()` : is missing\n- `!is.na()` : is not missing\n:::\n\n\n\n## Arranging rows with `arrange()`\n\nThe `arrange()` function sorts your data by one or more variables. This can be helpful for identifying extreme values or organizing data for presentation.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sort by baseline LSAS score (lowest to highest)\ndf_sorted <- df_data |>\n  select(id, group, lsas_screen) |>\n  arrange(lsas_screen)\n\nhead(df_sorted)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n     id group lsas_screen\n  <dbl> <dbl>       <dbl>\n1    65     2          60\n2   124     1          60\n3   140     0          60\n4   146     0          60\n5   157     0          60\n6    58     0          61\n```\n\n\n:::\n:::\n\n\n\n\nUse `desc()` for descending order:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sort by baseline LSAS score (highest to lowest)\ndf_sorted_desc <- df_data |>\n  select(id, group, lsas_screen) |>\n  arrange(desc(lsas_screen))\n\nhead(df_sorted_desc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n     id group lsas_screen\n  <dbl> <dbl>       <dbl>\n1   123     0         134\n2    23     0         131\n3    35     0         131\n4    53     0         128\n5   170     2         128\n6    55     2         125\n```\n\n\n:::\n:::\n\n\n\n\n# Creating new variables with `mutate()`\n\nThe `mutate()` function allows us to create new variables or modify existing ones. This is often used for creating derived variables, such as change scores or standardized scores.\n\n## Basic calculations\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_with_change <- df_data |>\n  select(id, group, lsas_screen, lsas_post) |>\n  mutate(\n    # Calculate change score (post - baseline)\n    lsas_change = lsas_post - lsas_screen,\n    # Calculate percentage change\n    lsas_pct_change = (lsas_change / lsas_screen) * 100\n  )\n\nhead(df_with_change)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n     id group lsas_screen lsas_post lsas_change lsas_pct_change\n  <dbl> <dbl>       <dbl>     <dbl>       <dbl>           <dbl>\n1     1     2          63        50         -13           -20.6\n2     2     1          71        NA          NA            NA  \n3     3     0          98        77         -21           -21.4\n4     4     2          63        22         -41           -65.1\n5     5     2          74        NA          NA            NA  \n6     6     2          81        52         -29           -35.8\n```\n\n\n:::\n:::\n\n\n\n\n## Creating categorical variables\n\nWe often need to create categorical versions of continuous variables:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_with_categories <- df_data |>\n  select(id, group, phq9_screen, gad_screen) |>\n  mutate(\n    # Using case_when() for PHQ9 severity categories\n    phq9_severity = case_when(\n      phq9_screen < 5 ~ \"Minimal\",\n      phq9_screen < 10 ~ \"Mild\",\n      phq9_screen < 15 ~ \"Moderate\",\n      phq9_screen < 20 ~ \"Moderately severe\",\n      phq9_screen >= 20 ~ \"Severe\",\n      is.na(phq9_screen) ~ \"Missing\"\n    ),\n    # Convert to factor\n    phq9_severity = factor(\n      phq9_severity,\n      levels = c(\n        \"Minimal\",\n        \"Mild\",\n        \"Moderate\",\n        \"Moderately severe\",\n        \"Severe\",\n        \"Missing\"\n      ),\n      ordered = TRUE\n    ),\n    # Create binary variable for high anxiety\n    high_anxiety = factor(\n      ifelse(gad_screen >= 10, \"High\", \"Low\"),\n      levels = c(\"Low\", \"High\")\n    ),\n    # Create more readable group labels\n    group_label = factor(group,\n      levels = c(0, 1, 2),\n      labels = c(\"Waitlist\", \"Self-guided\", \"Therapist-guided\")\n    )\n  )\n\n# Check our new variables\ntable(df_with_categories$phq9_severity)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n          Minimal              Mild          Moderate Moderately severe \n               19                80                52                30 \n           Severe           Missing \n                0                 0 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(df_with_categories$group_label)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n        Waitlist      Self-guided Therapist-guided \n              60               61               60 \n```\n\n\n:::\n:::\n\n\n\n\nWe can check how our created PHQ9 categories map to the raw scores:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_with_categories |>\n  select(phq9_screen, phq9_severity) |>\n  distinct(phq9_screen, phq9_severity) |>\n  arrange(phq9_screen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19 × 2\n   phq9_screen phq9_severity    \n         <dbl> <ord>            \n 1           1 Minimal          \n 2           2 Minimal          \n 3           3 Minimal          \n 4           4 Minimal          \n 5           5 Mild             \n 6           6 Mild             \n 7           7 Mild             \n 8           8 Mild             \n 9           9 Mild             \n10          10 Moderate         \n11          11 Moderate         \n12          12 Moderate         \n13          13 Moderate         \n14          14 Moderate         \n15          15 Moderately severe\n16          16 Moderately severe\n17          17 Moderately severe\n18          18 Moderately severe\n19          19 Moderately severe\n```\n\n\n:::\n:::\n\n\n\n\n# Summarizing data with `group_by()` and `summarize()`\n\nA very common task is grouping data and calculating summary statistics.\n\n## Basic summarization\nWe can use the `summarize()` (from `dplyr`) function to calculate summary statistics for our data.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate overall statistics\ndf_data |>\n  summarize(\n    n_participants = n(),\n    mean_lsas = mean(lsas_screen, na.rm = TRUE),\n    sd_lsas = sd(lsas_screen, na.rm = TRUE),\n    median_lsas = median(lsas_screen, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  n_participants mean_lsas sd_lsas median_lsas\n           <int>     <dbl>   <dbl>       <dbl>\n1            181      84.8    16.5          82\n```\n\n\n:::\n:::\n\n\n\n\n## Grouped summarization\n\nMore often, we want to calculate statistics by groups:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate statistics by treatment group\ngroup_stats <- df_data |>\n  group_by(group) |>\n  summarize(\n    n_participants = n(),\n    mean_lsas = mean(lsas_screen, na.rm = TRUE),\n    sd_lsas = sd(lsas_screen, na.rm = TRUE),\n    median_lsas = median(lsas_screen, na.rm = TRUE),\n    .groups = \"drop\" # This removes the grouping\n  )\n\ngroup_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  group n_participants mean_lsas sd_lsas median_lsas\n  <dbl>          <int>     <dbl>   <dbl>       <dbl>\n1     0             60      87.0    19.0          83\n2     1             61      83.1    13.0          82\n3     2             60      84.2    17.0          81\n```\n\n\n:::\n:::\n\n\n\n\nWe can also use the `.by` syntax which is often cleaner:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_data |>\n  summarize(\n    n_participants = n(),\n    mean_lsas = mean(lsas_screen, na.rm = TRUE),\n    sd_lsas = sd(lsas_screen, na.rm = TRUE),\n    .by = group\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  group n_participants mean_lsas sd_lsas\n  <dbl>          <int>     <dbl>   <dbl>\n1     2             60      84.2    17.0\n2     1             61      83.1    13.0\n3     0             60      87.0    19.0\n```\n\n\n:::\n:::\n\n\n\n\n# Reshaping data: Wide vs. Long format\n\nUnderstanding data shapes is crucial for analysis and visualization. Let's explore the difference between wide and long format data.\n\n## Understanding wide vs. long format\nOur data is currently in wide format, where each participant has one row, with repeated measures in separate columns.\n\n- **Wide format**: Each participant has one row, with repeated measures in separate columns  \n- **Long format**: Each measurement has its own row, with a column indicating the time point\n\n::: callout-note\n## When to use each format\n\n- **Wide format**: Calculating change scores, some statistical tests (e.g., SEM), demographic tables\n- **Long format**: Plotting over time, mixed-effects models, most `ggplot` visualizations\n:::\n\n## Converting to long format with `pivot_longer()`\n\nLet's focus on the LSAS measurements across time. First, let's see what LSAS columns we have:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check what LSAS columns we have\ndf_data |>\n  select(starts_with(\"lsas\")) |>\n  names()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"lsas_screen\" \"lsas_v1\"     \"lsas_v2\"     \"lsas_v3\"     \"lsas_v4\"    \n [6] \"lsas_v5\"     \"lsas_v6\"     \"lsas_v7\"     \"lsas_v8\"     \"lsas_post\"  \n[11] \"lsas_fu6\"    \"lsas_fu12\"  \n```\n\n\n:::\n:::\n\n\n\n\nAll of the columns that start with \"lsas\" are LSAS scores at different time points. Now let's convert to long format:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_lsas_long <- df_data |>\n  select(id, group, starts_with(\"lsas\")) |>\n  pivot_longer(\n    cols = starts_with(\"lsas\"), # Which columns to pivot\n    names_to = \"time_point\", # Name for the new column with time info\n    values_to = \"lsas_score\" # Name for the new column with values\n  )\n\nhead(df_lsas_long, 12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n      id group time_point  lsas_score\n   <dbl> <dbl> <chr>            <dbl>\n 1     1     2 lsas_screen         63\n 2     1     2 lsas_v1             72\n 3     1     2 lsas_v2             64\n 4     1     2 lsas_v3             72\n 5     1     2 lsas_v4             61\n 6     1     2 lsas_v5             61\n 7     1     2 lsas_v6             46\n 8     1     2 lsas_v7             55\n 9     1     2 lsas_v8             49\n10     1     2 lsas_post           50\n11     1     2 lsas_fu6            33\n12     1     2 lsas_fu12           27\n```\n\n\n:::\n:::\n\n\n\n\n## Cleaning the time variable\n\nThe time variable is not very readable. Let's clean it up and create properly ordered factors:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_lsas_long <- df_lsas_long |>\n  # Split the time_point column to separate \"lsas\" from the actual time\n  separate(time_point, into = c(\"measure\", \"time\"), sep = \"_\") |>\n  # Create a cleaner time variable\n  mutate(\n    time_clean = case_when(\n      time == \"screen\" ~ \"Baseline\",\n      time == \"v1\" ~ \"Week 1\",\n      time == \"v2\" ~ \"Week 2\",\n      time == \"v3\" ~ \"Week 3\",\n      time == \"v4\" ~ \"Week 4\",\n      time == \"v5\" ~ \"Week 5\",\n      time == \"v6\" ~ \"Week 6\",\n      time == \"v7\" ~ \"Week 7\",\n      time == \"v8\" ~ \"Week 8\",\n      time == \"post\" ~ \"Post-treatment\",\n      time == \"fu6\" ~ \"6-month follow-up\",\n      time == \"fu12\" ~ \"12-month follow-up\"\n    ),\n    # Also create a numeric week variable for plotting\n    week_num = case_when(\n      time == \"screen\" ~ 0,\n      time == \"v1\" ~ 1,\n      time == \"v2\" ~ 2,\n      time == \"v3\" ~ 3,\n      time == \"v4\" ~ 4,\n      time == \"v5\" ~ 5,\n      time == \"v6\" ~ 6,\n      time == \"v7\" ~ 7,\n      time == \"v8\" ~ 8,\n      time == \"post\" ~ 9,\n      time == \"fu6\" ~ 33, # 9 + 6*4 weeks\n      time == \"fu12\" ~ 57 # 9 + 12*4 weeks\n    ),\n  ) |>\n  # Remove the \"measure\" column since it's just \"lsas\" for all rows\n  select(-measure)\n\nhead(df_lsas_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n     id group time   lsas_score time_clean week_num\n  <dbl> <dbl> <chr>       <dbl> <chr>         <dbl>\n1     1     2 screen         63 Baseline          0\n2     1     2 v1             72 Week 1            1\n3     1     2 v2             64 Week 2            2\n4     1     2 v3             72 Week 3            3\n5     1     2 v4             61 Week 4            4\n6     1     2 v5             61 Week 5            5\n```\n\n\n:::\n:::\n\n\n\n\n### Working with factors\n\nYou might notice that when we try to sort or plot this data, the time points don't appear in chronological order. This is because R treats them as character strings and sorts them alphabetically. We need to convert them to **factors** with a specific order.\n\n::: callout-note\n## What are factors?\n\nFactors are R's way of handling categorical data with a specific order or set of allowed values. They're especially important in data analysis to:\n\n- Ensuring consistent category names (no typos)\n- Controlling the order of categories in tables and plots\n- Proper statistical analysis of categorical variables\n:::\n\nLet's see the problem first:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check the current order\nunique(df_lsas_long$time_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Baseline\"           \"Week 1\"             \"Week 2\"            \n [4] \"Week 3\"             \"Week 4\"             \"Week 5\"            \n [7] \"Week 6\"             \"Week 7\"             \"Week 8\"            \n[10] \"Post-treatment\"     \"6-month follow-up\"  \"12-month follow-up\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# See what happens when we sort\nsort(unique(df_lsas_long$time_clean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"12-month follow-up\" \"6-month follow-up\"  \"Baseline\"          \n [4] \"Post-treatment\"     \"Week 1\"             \"Week 2\"            \n [7] \"Week 3\"             \"Week 4\"             \"Week 5\"            \n[10] \"Week 6\"             \"Week 7\"             \"Week 8\"            \n```\n\n\n:::\n:::\n\n\n\n\nNow let's fix this by creating a properly ordered factor:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forcats) # Part of tidyverse, for working with factors\n\ndf_lsas_long <- df_lsas_long |>\n  mutate(\n    # Create a factor for time points with proper ordering\n    time_factor = factor(\n      time_clean,\n      levels = c(\n        \"Baseline\", \"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\",\n        \"Week 5\", \"Week 6\", \"Week 7\", \"Week 8\",\n        \"Post-treatment\", \"6-month follow-up\", \"12-month follow-up\"\n      )\n    ),\n    # Create a factor for treatment groups with meaningful labels\n    group_factor = factor(\n      group,\n      levels = c(0, 1, 2),\n      labels = c(\"Waitlist\", \"Self-guided\", \"Therapist-guided\")\n    )\n  )\n\n# Check our factors\nlevels(df_lsas_long$time_factor)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Baseline\"           \"Week 1\"             \"Week 2\"            \n [4] \"Week 3\"             \"Week 4\"             \"Week 5\"            \n [7] \"Week 6\"             \"Week 7\"             \"Week 8\"            \n[10] \"Post-treatment\"     \"6-month follow-up\"  \"12-month follow-up\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(df_lsas_long$group_factor)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Waitlist\"         \"Self-guided\"      \"Therapist-guided\"\n```\n\n\n:::\n:::\n\n\n\n\nLet's see how factors help by comparing how character vs factor variables are ordered:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First, let's see the unique values in each format\nunique(df_lsas_long$time_clean) |> sort()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"12-month follow-up\" \"6-month follow-up\"  \"Baseline\"          \n [4] \"Post-treatment\"     \"Week 1\"             \"Week 2\"            \n [7] \"Week 3\"             \"Week 4\"             \"Week 5\"            \n[10] \"Week 6\"             \"Week 7\"             \"Week 8\"            \n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(df_lsas_long$time_factor)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Baseline\"           \"Week 1\"             \"Week 2\"            \n [4] \"Week 3\"             \"Week 4\"             \"Week 5\"            \n [7] \"Week 6\"             \"Week 7\"             \"Week 8\"            \n[10] \"Post-treatment\"     \"6-month follow-up\"  \"12-month follow-up\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Compare what happens when we arrange/sort the data\ndf_lsas_long |>\n  select(time_clean, time_factor) |>\n  arrange(time_clean) |>\n  distinct(time_clean, time_factor) |>\n  head(8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 2\n  time_clean         time_factor       \n  <chr>              <fct>             \n1 12-month follow-up 12-month follow-up\n2 6-month follow-up  6-month follow-up \n3 Baseline           Baseline          \n4 Post-treatment     Post-treatment    \n5 Week 1             Week 1            \n6 Week 2             Week 2            \n7 Week 3             Week 3            \n8 Week 4             Week 4            \n```\n\n\n:::\n\n```{.r .cell-code}\ndf_lsas_long |>\n  select(time_clean, time_factor) |>\n  arrange(time_factor) |>\n  distinct(time_clean, time_factor) |>\n  head(8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 2\n  time_clean time_factor\n  <chr>      <fct>      \n1 Baseline   Baseline   \n2 Week 1     Week 1     \n3 Week 2     Week 2     \n4 Week 3     Week 3     \n5 Week 4     Week 4     \n6 Week 5     Week 5     \n7 Week 6     Week 6     \n8 Week 7     Week 7     \n```\n\n\n:::\n:::\n\n\n\n\n**Notice the difference**: \n\n- The character variable sorts alphabetically: \"12-month follow-up\" comes before \"6-month follow-up\" \n- The factor variable sorts logically: Baseline → Week 1 → Week 2 → ... → Post-treatment → Follow-ups\n\nThis is why factors are essential for any categorical variable where order matters!\n\n::: callout-tip\n## Useful factor functions from forcats\n\n- `fct_relevel()`: Change the order of factor levels\n- `fct_reorder()`: Reorder factor levels by another variable\n- `fct_recode()`: Change factor level names\n- `fct_collapse()`: Combine factor levels\n- `fct_lump()`: Collapse least common levels into \"Other\"\n:::\n\n### Using factors in summaries\n\nNow our factors will behave properly in summaries and plots:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summary by time point (now in correct order!)\ntime_summary <- df_lsas_long |>\n  summarize(\n    n_obs = sum(!is.na(lsas_score)),\n    mean_lsas = mean(lsas_score, na.rm = TRUE),\n    .by = time_factor\n  )\n\ntime_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 3\n   time_factor        n_obs mean_lsas\n   <fct>              <int>     <dbl>\n 1 Baseline             181      84.8\n 2 Week 1               172      80.1\n 3 Week 2               158      79.3\n 4 Week 3               142      77.8\n 5 Week 4               142      75.6\n 6 Week 5               124      73.6\n 7 Week 6               132      70.2\n 8 Week 7               123      69.5\n 9 Week 8               119      67.8\n10 Post-treatment       169      67.1\n11 6-month follow-up    104      57.0\n12 12-month follow-up   101      55  \n```\n\n\n:::\n:::\n\n\n\n### Why factors matter for visualization\n\nFactors ensure that our plots display categories in the correct order:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compare plots with and without proper factor ordering\nlibrary(ggplot2)\n\n# Create sample data for demonstration\nplot_data <- df_lsas_long |>\n  summarize(\n    mean_lsas = mean(lsas_score, na.rm = TRUE),\n    .by = c(time_clean, time_factor, week_num, group_factor)\n  )\n\n# Plot with character variable (wrong order)\np1 <- ggplot(plot_data, aes(x = time_clean, y = mean_lsas, color = group_factor)) +\n  geom_point(size = 3) +\n  geom_line(aes(group = group_factor)) +\n  labs(title = \"Character variable (alphabetical order)\", x = \"Time\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n# Plot with factor variable (correct order)\np2 <- ggplot(plot_data, aes(x = time_factor, y = mean_lsas, color = group_factor)) +\n  geom_point(size = 3) +\n  geom_line(aes(group = group_factor)) +\n  labs(title = \"Factor variable (logical order)\", x = \"Time\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n\n# Display both plots\np1\n```\n\n::: {.cell-output-display}\n![](tidy-data-manipulation_files/figure-html/factors-plotting-1.png){width=672}\n:::\n\n```{.r .cell-code}\np2\n```\n\n::: {.cell-output-display}\n![](tidy-data-manipulation_files/figure-html/factors-plotting-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  plot_data,\n  aes(\n    x = week_num,\n    y = mean_lsas,\n    color = group_factor\n  )\n) +\n  geom_point(size = 3) +\n  geom_line(aes(group = group_factor)) +\n  scale_x_continuous(\n    breaks = plot_data$week_num, # Use numeric positions\n    labels = plot_data$time_clean # Use readable labels\n  ) +\n  labs(title = \"Factor variable + Numeric Positions\", x = \"Time\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n```\n\n::: {.cell-output-display}\n![](tidy-data-manipulation_files/figure-html/factors-plotting-numeric-time-1.png){width=960}\n:::\n:::\n\n\n\n\n::: callout-important\n## Key points about factors\n\n1. **Always use factors for categorical variables** that will be used in analysis or plotting\n2. **Set the levels in logical order** (not alphabetical)\n3. **Use meaningful labels** instead of numeric codes\n4. **Factors control the order** in tables, plots, and statistical output\n5. **The `forcats` package** provides helpful functions for factor manipulation\n:::\n\n## Summarizing longitudinal data\n\nNow that we have our data in long format, we can easily calculate means by group and time:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlsas_summary <- df_lsas_long |>\n  summarize(\n    n_obs = sum(!is.na(lsas_score)),\n    mean_lsas = mean(lsas_score, na.rm = TRUE),\n    sd_lsas = sd(lsas_score, na.rm = TRUE),\n    .by = c(group_factor, time_factor)\n  )\n\nlsas_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 36 × 5\n   group_factor     time_factor    n_obs mean_lsas sd_lsas\n   <fct>            <fct>          <int>     <dbl>   <dbl>\n 1 Therapist-guided Baseline          60      84.2    17.0\n 2 Therapist-guided Week 1            59      78.3    19.2\n 3 Therapist-guided Week 2            51      77.5    20.8\n 4 Therapist-guided Week 3            48      75.7    21.1\n 5 Therapist-guided Week 4            49      72.0    19.1\n 6 Therapist-guided Week 5            45      68.9    23.6\n 7 Therapist-guided Week 6            47      61.9    20.9\n 8 Therapist-guided Week 7            48      61.8    23.9\n 9 Therapist-guided Week 8            43      57.5    21.8\n10 Therapist-guided Post-treatment    54      57.4    23.2\n# ℹ 26 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Converting back to wide format with `pivot_wider()`\n\nSometimes we need to convert back to wide format, for example to create a table with means by group and time:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a wide format table with groups as columns (just means)\nlsas_wide_simple <- lsas_summary |>\n  select(time_factor, group_factor, mean_lsas) |>\n  pivot_wider(\n    names_from = group_factor,\n    values_from = mean_lsas,\n    names_prefix = \"mean_\"\n  )\n\nlsas_wide_simple\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   time_factor        `mean_Therapist-guided` `mean_Self-guided` mean_Waitlist\n   <fct>                                <dbl>              <dbl>         <dbl>\n 1 Baseline                              84.2               83.1          87.0\n 2 Week 1                                78.3               78.5          83.5\n 3 Week 2                                77.5               78.4          81.9\n 4 Week 3                                75.7               77.3          80.3\n 5 Week 4                                72.0               71.2          82.3\n 6 Week 5                                68.9               69.6          81.0\n 7 Week 6                                61.9               67.8          80.0\n 8 Week 7                                61.8               69.5          78.0\n 9 Week 8                                57.5               67.1          77.9\n10 Post-treatment                        57.4               64.9          78.4\n11 6-month follow-up                     56.4               57.7         NaN  \n12 12-month follow-up                    55.7               54.2         NaN  \n```\n\n\n:::\n\n```{.r .cell-code}\n# More complex example: keeping multiple statistics (mean, sd, and n)\nlsas_wide_detailed <- lsas_summary |>\n  pivot_wider(\n    names_from = group_factor,\n    values_from = c(mean_lsas, sd_lsas, n_obs),\n    names_sep = \"_\"\n  )\n\nlsas_wide_detailed |>\n  knitr::kable(digits = 2)\n```\n\n::: {.cell-output-display}\n\n\n|time_factor        | mean_lsas_Therapist-guided| mean_lsas_Self-guided| mean_lsas_Waitlist| sd_lsas_Therapist-guided| sd_lsas_Self-guided| sd_lsas_Waitlist| n_obs_Therapist-guided| n_obs_Self-guided| n_obs_Waitlist|\n|:------------------|--------------------------:|---------------------:|------------------:|------------------------:|-------------------:|----------------:|----------------------:|-----------------:|--------------:|\n|Baseline           |                      84.22|                 83.08|              86.98|                    16.95|               12.97|            18.99|                     60|                61|             60|\n|Week 1             |                      78.27|                 78.45|              83.47|                    19.17|               14.41|            19.63|                     59|                55|             58|\n|Week 2             |                      77.53|                 78.37|              81.95|                    20.79|               16.92|            22.48|                     51|                52|             55|\n|Week 3             |                      75.67|                 77.28|              80.27|                    21.10|               18.22|            21.29|                     48|                43|             51|\n|Week 4             |                      71.98|                 71.24|              82.35|                    19.13|               17.59|            24.01|                     49|                41|             52|\n|Week 5             |                      68.91|                 69.58|              81.02|                    23.62|               20.87|            21.33|                     45|                33|             46|\n|Week 6             |                      61.87|                 67.81|              80.04|                    20.90|               19.88|            25.35|                     47|                36|             49|\n|Week 7             |                      61.75|                 69.52|              77.98|                    23.94|               21.46|            26.96|                     48|                31|             44|\n|Week 8             |                      57.47|                 67.13|              77.87|                    21.82|               21.87|            25.72|                     43|                30|             46|\n|Post-treatment     |                      57.35|                 64.91|              78.45|                    23.19|               21.08|            25.44|                     54|                57|             58|\n|6-month follow-up  |                      56.42|                 57.71|                NaN|                    25.81|               21.98|               NA|                     53|                51|              0|\n|12-month follow-up |                      55.71|                 54.24|                NaN|                    26.18|               25.15|               NA|                     52|                49|              0|\n\n\n:::\n:::\n\n\n\n\n::: callout-tip\n## Advanced pivot_wider: Multiple value columns\n\nNotice how `pivot_wider()` can handle multiple value columns at once:\n\n- `values_from = c(mean_lsas, sd_lsas, n_obs)`: Pivots all three statistics\n- `names_sep = \"_\"`: Controls how column names are created\n- Result: Each group gets three columns (e.g., `mean_lsas_Waitlist`, `sd_lsas_Waitlist`, `n_obs_Waitlist`)\n\nThis is very useful for creating comprehensive summary tables!\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Using gt for better table formatting\nlibrary(gt)\n\nmy_table <- lsas_wide_detailed |>\n  gt() |>\n  tab_spanner(\n    label = \"Waitlist\",\n    columns = contains(\"Waitlist\")\n  ) |>\n  tab_spanner(\n    label = \"Self-guided\",\n    columns = contains(\"Self-guided\")\n  ) |>\n  tab_spanner(\n    label = \"Therapist-guided\",\n    columns = contains(\"Therapist-guided\")\n  ) |>\n  cols_label(\n    time_factor = \"Time Point\",\n    mean_lsas_Waitlist = \"M\",\n    sd_lsas_Waitlist = \"SD\",\n    n_obs_Waitlist = \"N\",\n    `mean_lsas_Self-guided` = \"M\",\n    `sd_lsas_Self-guided` = \"SD\",\n    `n_obs_Self-guided` = \"N\",\n    `mean_lsas_Therapist-guided` = \"M\",\n    `sd_lsas_Therapist-guided` = \"SD\",\n    `n_obs_Therapist-guided` = \"N\"\n  ) |>\n  fmt_number(\n    columns = starts_with(\"mean_\") | starts_with(\"sd_\"),\n    decimals = 2\n  ) |>\n  fmt_number(\n    columns = starts_with(\"n_obs\"),\n    decimals = 0\n  ) |>\n  sub_missing(\n    columns = everything(),\n    missing_text = \"—\"\n  ) |>\n  # Custom styling\n  tab_options(\n    table.border.top.style = \"solid\",\n    table.border.top.width = px(2),\n    table.border.bottom.style = \"solid\",\n    table.border.bottom.width = px(2),\n    table.border.left.style = \"none\",\n    table.border.right.style = \"none\",\n    heading.border.bottom.style = \"solid\",\n    heading.border.bottom.width = px(1),\n    column_labels.border.top.style = \"solid\",\n    column_labels.border.top.width = px(1),\n    column_labels.border.bottom.style = \"solid\",\n    column_labels.border.bottom.width = px(1),\n    table_body.border.bottom.style = \"none\",\n    table.font.size = 12\n  ) |>\n  tab_style(\n    style = cell_text(weight = \"bold\"),\n    locations = cells_column_spanners()\n  ) |>\n  tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_column_labels()\n  ) |>\n  tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_body(columns = -time_factor)\n  ) |>\n  # Add table title and subtitle\n  tab_header(\n    title = \"Table 1\",\n    subtitle = \"LSAS Scores by Treatment Group and Time Point\"\n  ) |>\n  # Add table note\n  tab_source_note(\n    source_note = \"Note. LSAS = Liebowitz Social Anxiety Scale; M = Mean; SD = Standard Deviation; N = Sample Size.\"\n  )\n\nmy_table\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"czsxeollic\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#czsxeollic table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#czsxeollic thead, #czsxeollic tbody, #czsxeollic tfoot, #czsxeollic tr, #czsxeollic td, #czsxeollic th {\n  border-style: none;\n}\n\n#czsxeollic p {\n  margin: 0;\n  padding: 0;\n}\n\n#czsxeollic .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 12px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#czsxeollic .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#czsxeollic .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#czsxeollic .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#czsxeollic .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#czsxeollic .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #D3D3D3;\n}\n\n#czsxeollic .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#czsxeollic .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#czsxeollic .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#czsxeollic .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#czsxeollic .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#czsxeollic .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#czsxeollic .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#czsxeollic .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#czsxeollic .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#czsxeollic .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#czsxeollic .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#czsxeollic .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#czsxeollic .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#czsxeollic .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#czsxeollic .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#czsxeollic .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#czsxeollic .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#czsxeollic .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#czsxeollic .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#czsxeollic .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#czsxeollic .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#czsxeollic .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#czsxeollic .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#czsxeollic .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#czsxeollic .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#czsxeollic .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#czsxeollic .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#czsxeollic .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#czsxeollic .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#czsxeollic .gt_left {\n  text-align: left;\n}\n\n#czsxeollic .gt_center {\n  text-align: center;\n}\n\n#czsxeollic .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#czsxeollic .gt_font_normal {\n  font-weight: normal;\n}\n\n#czsxeollic .gt_font_bold {\n  font-weight: bold;\n}\n\n#czsxeollic .gt_font_italic {\n  font-style: italic;\n}\n\n#czsxeollic .gt_super {\n  font-size: 65%;\n}\n\n#czsxeollic .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#czsxeollic .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#czsxeollic .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#czsxeollic .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#czsxeollic .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#czsxeollic .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#czsxeollic .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#czsxeollic .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#czsxeollic div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"10\" class=\"gt_heading gt_title gt_font_normal\" style>Table 1</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"10\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>LSAS Scores by Treatment Group and Time Point</td>\n    </tr>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"time_factor\">Time Point</th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Therapist-guided\">\n        <div class=\"gt_column_spanner\">Therapist-guided</div>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Self-guided\">\n        <div class=\"gt_column_spanner\">Self-guided</div>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" style=\"font-weight: bold;\" scope=\"colgroup\" id=\"Waitlist\">\n        <div class=\"gt_column_spanner\">Waitlist</div>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"mean_lsas_Therapist-guided\">M</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"sd_lsas_Therapist-guided\">SD</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"n_obs_Therapist-guided\">N</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"mean_lsas_Self-guided\">M</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"sd_lsas_Self-guided\">SD</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"n_obs_Self-guided\">N</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"mean_lsas_Waitlist\">M</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"sd_lsas_Waitlist\">SD</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"n_obs_Waitlist\">N</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Baseline</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">84.22</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">16.95</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">60</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">83.08</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">12.97</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">61</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">86.98</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">18.99</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">60</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Week 1</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">78.27</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">19.17</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">59</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">78.45</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">14.41</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">55</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">83.47</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">19.63</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">58</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Week 2</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">77.53</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">20.79</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">51</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">78.37</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">16.92</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">52</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">81.95</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">22.48</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">55</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Week 3</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">75.67</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">21.10</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">48</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">77.28</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">18.22</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">43</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">80.27</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">21.29</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">51</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Week 4</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">71.98</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">19.13</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">49</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">71.24</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">17.59</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">41</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">82.35</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">24.01</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">52</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Week 5</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">68.91</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">23.62</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">45</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">69.58</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">20.87</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">33</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">81.02</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">21.33</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">46</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Week 6</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">61.87</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">20.90</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">47</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">67.81</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">19.88</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">36</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">80.04</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">25.35</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">49</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Week 7</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">61.75</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">23.94</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">48</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">69.52</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">21.46</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">31</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">77.98</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">26.96</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">44</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Week 8</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">57.47</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">21.82</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">43</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">67.13</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">21.87</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">30</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">77.87</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">25.72</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">46</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">Post-treatment</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">57.35</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">23.19</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">54</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">64.91</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">21.08</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">57</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">78.45</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">25.44</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">58</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">6-month follow-up</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">56.42</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">25.81</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">53</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">57.71</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">21.98</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">51</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">—</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">—</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">0</td></tr>\n    <tr><td headers=\"time_factor\" class=\"gt_row gt_center\">12-month follow-up</td>\n<td headers=\"mean_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">55.71</td>\n<td headers=\"sd_lsas_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">26.18</td>\n<td headers=\"n_obs_Therapist-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">52</td>\n<td headers=\"mean_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">54.24</td>\n<td headers=\"sd_lsas_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">25.15</td>\n<td headers=\"n_obs_Self-guided\" class=\"gt_row gt_right\" style=\"text-align: center;\">49</td>\n<td headers=\"mean_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">—</td>\n<td headers=\"sd_lsas_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">—</td>\n<td headers=\"n_obs_Waitlist\" class=\"gt_row gt_right\" style=\"text-align: center;\">0</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"10\">Note. LSAS = Liebowitz Social Anxiety Scale; M = Mean; SD = Standard Deviation; N = Sample Size.</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n\n```{.r .cell-code}\ngtsave(my_table, \"tables/my_table.docx\")\n```\n:::",
    "supporting": [
      "tidy-data-manipulation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}